ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Blinker.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Blinker_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	Blinker_Enable
  22              		.code	16
  23              		.thumb_func
  24              		.type	Blinker_Enable, %function
  25              	Blinker_Enable:
  26              	.LFB4:
  27              		.file 1 "Generated_Source\\PSoC4\\Blinker.c"
   1:Generated_Source\PSoC4/Blinker.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Blinker.c **** * File Name: Blinker.c
   3:Generated_Source\PSoC4/Blinker.c **** * Version 3.30
   4:Generated_Source\PSoC4/Blinker.c **** *
   5:Generated_Source\PSoC4/Blinker.c **** * Description:
   6:Generated_Source\PSoC4/Blinker.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC4/Blinker.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC4/Blinker.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC4/Blinker.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC4/Blinker.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC4/Blinker.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC4/Blinker.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC4/Blinker.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC4/Blinker.c **** *
  15:Generated_Source\PSoC4/Blinker.c **** * Note:
  16:Generated_Source\PSoC4/Blinker.c **** *
  17:Generated_Source\PSoC4/Blinker.c **** *******************************************************************************
  18:Generated_Source\PSoC4/Blinker.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/Blinker.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/Blinker.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/Blinker.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/Blinker.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/Blinker.c **** 
  24:Generated_Source\PSoC4/Blinker.c **** #include "Blinker.h"
  25:Generated_Source\PSoC4/Blinker.c **** 
  26:Generated_Source\PSoC4/Blinker.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC4/Blinker.c **** #ifdef Blinker_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC4/Blinker.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC4/Blinker.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC4/Blinker.c **** #endif /* Blinker_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 2


  31:Generated_Source\PSoC4/Blinker.c **** 
  32:Generated_Source\PSoC4/Blinker.c **** uint8 Blinker_initVar = 0u;
  33:Generated_Source\PSoC4/Blinker.c **** 
  34:Generated_Source\PSoC4/Blinker.c **** 
  35:Generated_Source\PSoC4/Blinker.c **** /*******************************************************************************
  36:Generated_Source\PSoC4/Blinker.c **** * Function Name: Blinker_Start
  37:Generated_Source\PSoC4/Blinker.c **** ********************************************************************************
  38:Generated_Source\PSoC4/Blinker.c **** *
  39:Generated_Source\PSoC4/Blinker.c **** * Summary:
  40:Generated_Source\PSoC4/Blinker.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC4/Blinker.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC4/Blinker.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC4/Blinker.c **** *
  44:Generated_Source\PSoC4/Blinker.c **** * Parameters:
  45:Generated_Source\PSoC4/Blinker.c **** *  None
  46:Generated_Source\PSoC4/Blinker.c **** *
  47:Generated_Source\PSoC4/Blinker.c **** * Return:
  48:Generated_Source\PSoC4/Blinker.c **** *  None
  49:Generated_Source\PSoC4/Blinker.c **** *
  50:Generated_Source\PSoC4/Blinker.c **** * Global variables:
  51:Generated_Source\PSoC4/Blinker.c **** *  Blinker_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC4/Blinker.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC4/Blinker.c **** *
  54:Generated_Source\PSoC4/Blinker.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/Blinker.c **** void Blinker_Start(void) 
  56:Generated_Source\PSoC4/Blinker.c **** {
  57:Generated_Source\PSoC4/Blinker.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC4/Blinker.c ****     if(Blinker_initVar == 0u)
  59:Generated_Source\PSoC4/Blinker.c ****     {
  60:Generated_Source\PSoC4/Blinker.c ****         Blinker_Init();
  61:Generated_Source\PSoC4/Blinker.c ****         Blinker_initVar = 1u;
  62:Generated_Source\PSoC4/Blinker.c ****     }
  63:Generated_Source\PSoC4/Blinker.c ****     Blinker_Enable();
  64:Generated_Source\PSoC4/Blinker.c **** 
  65:Generated_Source\PSoC4/Blinker.c **** }
  66:Generated_Source\PSoC4/Blinker.c **** 
  67:Generated_Source\PSoC4/Blinker.c **** 
  68:Generated_Source\PSoC4/Blinker.c **** /*******************************************************************************
  69:Generated_Source\PSoC4/Blinker.c **** * Function Name: Blinker_Init
  70:Generated_Source\PSoC4/Blinker.c **** ********************************************************************************
  71:Generated_Source\PSoC4/Blinker.c **** *
  72:Generated_Source\PSoC4/Blinker.c **** * Summary:
  73:Generated_Source\PSoC4/Blinker.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC4/Blinker.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC4/Blinker.c **** *  Blinker_Start().
  76:Generated_Source\PSoC4/Blinker.c **** *
  77:Generated_Source\PSoC4/Blinker.c **** * Parameters:
  78:Generated_Source\PSoC4/Blinker.c **** *  None
  79:Generated_Source\PSoC4/Blinker.c **** *
  80:Generated_Source\PSoC4/Blinker.c **** * Return:
  81:Generated_Source\PSoC4/Blinker.c **** *  None
  82:Generated_Source\PSoC4/Blinker.c **** *
  83:Generated_Source\PSoC4/Blinker.c **** *******************************************************************************/
  84:Generated_Source\PSoC4/Blinker.c **** void Blinker_Init(void) 
  85:Generated_Source\PSoC4/Blinker.c **** {
  86:Generated_Source\PSoC4/Blinker.c ****     #if (Blinker_UsingFixedFunction || Blinker_UseControl)
  87:Generated_Source\PSoC4/Blinker.c ****         uint8 ctrl;
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 3


  88:Generated_Source\PSoC4/Blinker.c ****     #endif /* (Blinker_UsingFixedFunction || Blinker_UseControl) */
  89:Generated_Source\PSoC4/Blinker.c **** 
  90:Generated_Source\PSoC4/Blinker.c ****     #if(!Blinker_UsingFixedFunction)
  91:Generated_Source\PSoC4/Blinker.c ****         #if(Blinker_UseStatus)
  92:Generated_Source\PSoC4/Blinker.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC4/Blinker.c ****             uint8 Blinker_interruptState;
  94:Generated_Source\PSoC4/Blinker.c ****         #endif /* (Blinker_UseStatus) */
  95:Generated_Source\PSoC4/Blinker.c ****     #endif /* (!Blinker_UsingFixedFunction) */
  96:Generated_Source\PSoC4/Blinker.c **** 
  97:Generated_Source\PSoC4/Blinker.c ****     #if (Blinker_UsingFixedFunction)
  98:Generated_Source\PSoC4/Blinker.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC4/Blinker.c ****         Blinker_CONTROL |= Blinker_CFG0_MODE;
 100:Generated_Source\PSoC4/Blinker.c ****         #if (Blinker_DeadBand2_4)
 101:Generated_Source\PSoC4/Blinker.c ****             Blinker_CONTROL |= Blinker_CFG0_DB;
 102:Generated_Source\PSoC4/Blinker.c ****         #endif /* (Blinker_DeadBand2_4) */
 103:Generated_Source\PSoC4/Blinker.c **** 
 104:Generated_Source\PSoC4/Blinker.c ****         ctrl = Blinker_CONTROL3 & ((uint8 )(~Blinker_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC4/Blinker.c ****         Blinker_CONTROL3 = ctrl | Blinker_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC4/Blinker.c **** 
 107:Generated_Source\PSoC4/Blinker.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC4/Blinker.c ****         Blinker_RT1 &= ((uint8)(~Blinker_RT1_MASK));
 109:Generated_Source\PSoC4/Blinker.c ****         Blinker_RT1 |= Blinker_SYNC;
 110:Generated_Source\PSoC4/Blinker.c **** 
 111:Generated_Source\PSoC4/Blinker.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC4/Blinker.c ****         Blinker_RT1 &= ((uint8)(~Blinker_SYNCDSI_MASK));
 113:Generated_Source\PSoC4/Blinker.c ****         Blinker_RT1 |= Blinker_SYNCDSI_EN;
 114:Generated_Source\PSoC4/Blinker.c **** 
 115:Generated_Source\PSoC4/Blinker.c ****     #elif (Blinker_UseControl)
 116:Generated_Source\PSoC4/Blinker.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC4/Blinker.c ****         ctrl = Blinker_CONTROL & ((uint8)(~Blinker_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC4/Blinker.c ****                 ((uint8)(~Blinker_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC4/Blinker.c ****         Blinker_CONTROL = ctrl | Blinker_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC4/Blinker.c ****                                    Blinker_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC4/Blinker.c ****     #endif /* (Blinker_UsingFixedFunction) */
 122:Generated_Source\PSoC4/Blinker.c **** 
 123:Generated_Source\PSoC4/Blinker.c ****     #if (!Blinker_UsingFixedFunction)
 124:Generated_Source\PSoC4/Blinker.c ****         #if (Blinker_Resolution == 8)
 125:Generated_Source\PSoC4/Blinker.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC4/Blinker.c ****             Blinker_AUX_CONTROLDP0 |= (Blinker_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC4/Blinker.c ****         #else /* (Blinker_Resolution == 16)*/
 128:Generated_Source\PSoC4/Blinker.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC4/Blinker.c ****             Blinker_AUX_CONTROLDP0 |= (Blinker_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC4/Blinker.c ****             Blinker_AUX_CONTROLDP1 |= (Blinker_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC4/Blinker.c ****         #endif /* (Blinker_Resolution == 8) */
 132:Generated_Source\PSoC4/Blinker.c **** 
 133:Generated_Source\PSoC4/Blinker.c ****         Blinker_WriteCounter(Blinker_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC4/Blinker.c ****     #endif /* (!Blinker_UsingFixedFunction) */
 135:Generated_Source\PSoC4/Blinker.c **** 
 136:Generated_Source\PSoC4/Blinker.c ****     Blinker_WritePeriod(Blinker_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC4/Blinker.c **** 
 138:Generated_Source\PSoC4/Blinker.c ****         #if (Blinker_UseOneCompareMode)
 139:Generated_Source\PSoC4/Blinker.c ****             Blinker_WriteCompare(Blinker_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC4/Blinker.c ****         #else
 141:Generated_Source\PSoC4/Blinker.c ****             Blinker_WriteCompare1(Blinker_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC4/Blinker.c ****             Blinker_WriteCompare2(Blinker_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC4/Blinker.c ****         #endif /* (Blinker_UseOneCompareMode) */
 144:Generated_Source\PSoC4/Blinker.c **** 
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 4


 145:Generated_Source\PSoC4/Blinker.c ****         #if (Blinker_KillModeMinTime)
 146:Generated_Source\PSoC4/Blinker.c ****             Blinker_WriteKillTime(Blinker_MinimumKillTime);
 147:Generated_Source\PSoC4/Blinker.c ****         #endif /* (Blinker_KillModeMinTime) */
 148:Generated_Source\PSoC4/Blinker.c **** 
 149:Generated_Source\PSoC4/Blinker.c ****         #if (Blinker_DeadBandUsed)
 150:Generated_Source\PSoC4/Blinker.c ****             Blinker_WriteDeadTime(Blinker_INIT_DEAD_TIME);
 151:Generated_Source\PSoC4/Blinker.c ****         #endif /* (Blinker_DeadBandUsed) */
 152:Generated_Source\PSoC4/Blinker.c **** 
 153:Generated_Source\PSoC4/Blinker.c ****     #if (Blinker_UseStatus || Blinker_UsingFixedFunction)
 154:Generated_Source\PSoC4/Blinker.c ****         Blinker_SetInterruptMode(Blinker_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC4/Blinker.c ****     #endif /* (Blinker_UseStatus || Blinker_UsingFixedFunction) */
 156:Generated_Source\PSoC4/Blinker.c **** 
 157:Generated_Source\PSoC4/Blinker.c ****     #if (Blinker_UsingFixedFunction)
 158:Generated_Source\PSoC4/Blinker.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC4/Blinker.c ****         Blinker_GLOBAL_ENABLE |= Blinker_BLOCK_EN_MASK;
 160:Generated_Source\PSoC4/Blinker.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC4/Blinker.c ****         Blinker_CONTROL2 |= Blinker_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC4/Blinker.c ****     #else
 163:Generated_Source\PSoC4/Blinker.c ****         #if(Blinker_UseStatus)
 164:Generated_Source\PSoC4/Blinker.c **** 
 165:Generated_Source\PSoC4/Blinker.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC4/Blinker.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC4/Blinker.c ****             Blinker_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC4/Blinker.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC4/Blinker.c ****             Blinker_STATUS_AUX_CTRL |= Blinker_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC4/Blinker.c **** 
 171:Generated_Source\PSoC4/Blinker.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC4/Blinker.c ****             CyExitCriticalSection(Blinker_interruptState);
 173:Generated_Source\PSoC4/Blinker.c **** 
 174:Generated_Source\PSoC4/Blinker.c ****             /* Clear the FIFO to enable the Blinker_STATUS_FIFOFULL
 175:Generated_Source\PSoC4/Blinker.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC4/Blinker.c ****             Blinker_ClearFIFO();
 177:Generated_Source\PSoC4/Blinker.c ****         #endif /* (Blinker_UseStatus) */
 178:Generated_Source\PSoC4/Blinker.c ****     #endif /* (Blinker_UsingFixedFunction) */
 179:Generated_Source\PSoC4/Blinker.c **** }
 180:Generated_Source\PSoC4/Blinker.c **** 
 181:Generated_Source\PSoC4/Blinker.c **** 
 182:Generated_Source\PSoC4/Blinker.c **** /*******************************************************************************
 183:Generated_Source\PSoC4/Blinker.c **** * Function Name: Blinker_Enable
 184:Generated_Source\PSoC4/Blinker.c **** ********************************************************************************
 185:Generated_Source\PSoC4/Blinker.c **** *
 186:Generated_Source\PSoC4/Blinker.c **** * Summary:
 187:Generated_Source\PSoC4/Blinker.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC4/Blinker.c **** *
 189:Generated_Source\PSoC4/Blinker.c **** * Parameters:
 190:Generated_Source\PSoC4/Blinker.c **** *  None
 191:Generated_Source\PSoC4/Blinker.c **** *
 192:Generated_Source\PSoC4/Blinker.c **** * Return:
 193:Generated_Source\PSoC4/Blinker.c **** *  None
 194:Generated_Source\PSoC4/Blinker.c **** *
 195:Generated_Source\PSoC4/Blinker.c **** * Side Effects:
 196:Generated_Source\PSoC4/Blinker.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC4/Blinker.c **** *
 198:Generated_Source\PSoC4/Blinker.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/Blinker.c **** void Blinker_Enable(void) 
 200:Generated_Source\PSoC4/Blinker.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC4/Blinker.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC4/Blinker.c ****     #if (Blinker_UsingFixedFunction)
 203:Generated_Source\PSoC4/Blinker.c ****         Blinker_GLOBAL_ENABLE |= Blinker_BLOCK_EN_MASK;
 204:Generated_Source\PSoC4/Blinker.c ****         Blinker_GLOBAL_STBY_ENABLE |= Blinker_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC4/Blinker.c ****     #endif /* (Blinker_UsingFixedFunction) */
 206:Generated_Source\PSoC4/Blinker.c **** 
 207:Generated_Source\PSoC4/Blinker.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC4/Blinker.c ****     #if (Blinker_UseControl || Blinker_UsingFixedFunction)
 209:Generated_Source\PSoC4/Blinker.c ****         Blinker_CONTROL |= Blinker_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1178     		ldrb	r1, [r2]
  36 0004 8023     		movs	r3, #128
  37 0006 5B42     		rsbs	r3, r3, #0
  38 0008 0B43     		orrs	r3, r1
  39 000a DBB2     		uxtb	r3, r3
  40 000c 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC4/Blinker.c ****     #endif /* (Blinker_UseControl || Blinker_UsingFixedFunction) */
 211:Generated_Source\PSoC4/Blinker.c **** }
  41              		.loc 1 211 0
  42              		@ sp needed
  43 000e 7047     		bx	lr
  44              	.L3:
  45              		.align	2
  46              	.L2:
  47 0010 73000F40 		.word	1074724979
  48              		.cfi_endproc
  49              	.LFE4:
  50              		.size	Blinker_Enable, .-Blinker_Enable
  51              		.section	.text.Blinker_Stop,"ax",%progbits
  52              		.align	2
  53              		.global	Blinker_Stop
  54              		.code	16
  55              		.thumb_func
  56              		.type	Blinker_Stop, %function
  57              	Blinker_Stop:
  58              	.LFB5:
 212:Generated_Source\PSoC4/Blinker.c **** 
 213:Generated_Source\PSoC4/Blinker.c **** 
 214:Generated_Source\PSoC4/Blinker.c **** /*******************************************************************************
 215:Generated_Source\PSoC4/Blinker.c **** * Function Name: Blinker_Stop
 216:Generated_Source\PSoC4/Blinker.c **** ********************************************************************************
 217:Generated_Source\PSoC4/Blinker.c **** *
 218:Generated_Source\PSoC4/Blinker.c **** * Summary:
 219:Generated_Source\PSoC4/Blinker.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC4/Blinker.c **** *  interrupts.
 221:Generated_Source\PSoC4/Blinker.c **** *
 222:Generated_Source\PSoC4/Blinker.c **** * Parameters:
 223:Generated_Source\PSoC4/Blinker.c **** *  None
 224:Generated_Source\PSoC4/Blinker.c **** *
 225:Generated_Source\PSoC4/Blinker.c **** * Return:
 226:Generated_Source\PSoC4/Blinker.c **** *  None
 227:Generated_Source\PSoC4/Blinker.c **** *
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 6


 228:Generated_Source\PSoC4/Blinker.c **** * Side Effects:
 229:Generated_Source\PSoC4/Blinker.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC4/Blinker.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC4/Blinker.c **** *
 232:Generated_Source\PSoC4/Blinker.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/Blinker.c **** void Blinker_Stop(void) 
 234:Generated_Source\PSoC4/Blinker.c **** {
  59              		.loc 1 234 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
 235:Generated_Source\PSoC4/Blinker.c ****     #if (Blinker_UseControl || Blinker_UsingFixedFunction)
 236:Generated_Source\PSoC4/Blinker.c ****         Blinker_CONTROL &= ((uint8)(~Blinker_CTRL_ENABLE));
  64              		.loc 1 236 0
  65 0000 024A     		ldr	r2, .L5
  66 0002 1178     		ldrb	r1, [r2]
  67 0004 7F23     		movs	r3, #127
  68 0006 0B40     		ands	r3, r1
  69 0008 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC4/Blinker.c ****     #endif /* (Blinker_UseControl || Blinker_UsingFixedFunction) */
 238:Generated_Source\PSoC4/Blinker.c **** 
 239:Generated_Source\PSoC4/Blinker.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC4/Blinker.c ****     #if (Blinker_UsingFixedFunction)
 241:Generated_Source\PSoC4/Blinker.c ****         Blinker_GLOBAL_ENABLE &= ((uint8)(~Blinker_BLOCK_EN_MASK));
 242:Generated_Source\PSoC4/Blinker.c ****         Blinker_GLOBAL_STBY_ENABLE &= ((uint8)(~Blinker_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC4/Blinker.c ****     #endif /* (Blinker_UsingFixedFunction) */
 244:Generated_Source\PSoC4/Blinker.c **** }
  70              		.loc 1 244 0
  71              		@ sp needed
  72 000a 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 000c 73000F40 		.word	1074724979
  77              		.cfi_endproc
  78              	.LFE5:
  79              		.size	Blinker_Stop, .-Blinker_Stop
  80              		.section	.text.Blinker_WriteCounter,"ax",%progbits
  81              		.align	2
  82              		.global	Blinker_WriteCounter
  83              		.code	16
  84              		.thumb_func
  85              		.type	Blinker_WriteCounter, %function
  86              	Blinker_WriteCounter:
  87              	.LFB6:
 245:Generated_Source\PSoC4/Blinker.c **** 
 246:Generated_Source\PSoC4/Blinker.c **** #if (Blinker_UseOneCompareMode)
 247:Generated_Source\PSoC4/Blinker.c ****     #if (Blinker_CompareMode1SW)
 248:Generated_Source\PSoC4/Blinker.c **** 
 249:Generated_Source\PSoC4/Blinker.c **** 
 250:Generated_Source\PSoC4/Blinker.c ****         /*******************************************************************************
 251:Generated_Source\PSoC4/Blinker.c ****         * Function Name: Blinker_SetCompareMode
 252:Generated_Source\PSoC4/Blinker.c ****         ********************************************************************************
 253:Generated_Source\PSoC4/Blinker.c ****         *
 254:Generated_Source\PSoC4/Blinker.c ****         * Summary:
 255:Generated_Source\PSoC4/Blinker.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 7


 256:Generated_Source\PSoC4/Blinker.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC4/Blinker.c ****         *
 258:Generated_Source\PSoC4/Blinker.c ****         * Parameters:
 259:Generated_Source\PSoC4/Blinker.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC4/Blinker.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC4/Blinker.c ****         *
 262:Generated_Source\PSoC4/Blinker.c ****         * Return:
 263:Generated_Source\PSoC4/Blinker.c ****         *  None
 264:Generated_Source\PSoC4/Blinker.c ****         *
 265:Generated_Source\PSoC4/Blinker.c ****         *******************************************************************************/
 266:Generated_Source\PSoC4/Blinker.c ****         void Blinker_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC4/Blinker.c ****         {
 268:Generated_Source\PSoC4/Blinker.c ****             #if(Blinker_UsingFixedFunction)
 269:Generated_Source\PSoC4/Blinker.c **** 
 270:Generated_Source\PSoC4/Blinker.c ****                 #if(0 != Blinker_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC4/Blinker.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << Blinker_CTRL_CMPMODE1_
 272:Generated_Source\PSoC4/Blinker.c ****                 #else
 273:Generated_Source\PSoC4/Blinker.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC4/Blinker.c ****                 #endif /* (0 != Blinker_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC4/Blinker.c **** 
 276:Generated_Source\PSoC4/Blinker.c ****                 Blinker_CONTROL3 &= ((uint8)(~Blinker_CTRL_CMPMODE1_MASK)); /*Clear Existing Data *
 277:Generated_Source\PSoC4/Blinker.c ****                 Blinker_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC4/Blinker.c **** 
 279:Generated_Source\PSoC4/Blinker.c ****             #elif (Blinker_UseControl)
 280:Generated_Source\PSoC4/Blinker.c **** 
 281:Generated_Source\PSoC4/Blinker.c ****                 #if(0 != Blinker_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC4/Blinker.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << Blinker_CTRL_CMPMODE1
 283:Generated_Source\PSoC4/Blinker.c ****                                                 Blinker_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC4/Blinker.c ****                 #else
 285:Generated_Source\PSoC4/Blinker.c ****                     uint8 comparemode1masked = comparemode & Blinker_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC4/Blinker.c ****                 #endif /* (0 != Blinker_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC4/Blinker.c **** 
 288:Generated_Source\PSoC4/Blinker.c ****                 #if(0 != Blinker_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC4/Blinker.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << Blinker_CTRL_CMPMODE2
 290:Generated_Source\PSoC4/Blinker.c ****                                                Blinker_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC4/Blinker.c ****                 #else
 292:Generated_Source\PSoC4/Blinker.c ****                     uint8 comparemode2masked = comparemode & Blinker_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC4/Blinker.c ****                 #endif /* (0 != Blinker_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC4/Blinker.c **** 
 295:Generated_Source\PSoC4/Blinker.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC4/Blinker.c ****                 Blinker_CONTROL &= ((uint8)(~(Blinker_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC4/Blinker.c ****                                             Blinker_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC4/Blinker.c ****                 Blinker_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC4/Blinker.c **** 
 300:Generated_Source\PSoC4/Blinker.c ****             #else
 301:Generated_Source\PSoC4/Blinker.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC4/Blinker.c ****             #endif /* (Blinker_UsingFixedFunction) */
 303:Generated_Source\PSoC4/Blinker.c ****         }
 304:Generated_Source\PSoC4/Blinker.c ****     #endif /* Blinker_CompareMode1SW */
 305:Generated_Source\PSoC4/Blinker.c **** 
 306:Generated_Source\PSoC4/Blinker.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC4/Blinker.c **** 
 308:Generated_Source\PSoC4/Blinker.c ****     #if (Blinker_CompareMode1SW)
 309:Generated_Source\PSoC4/Blinker.c **** 
 310:Generated_Source\PSoC4/Blinker.c **** 
 311:Generated_Source\PSoC4/Blinker.c ****         /*******************************************************************************
 312:Generated_Source\PSoC4/Blinker.c ****         * Function Name: Blinker_SetCompareMode1
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 8


 313:Generated_Source\PSoC4/Blinker.c ****         ********************************************************************************
 314:Generated_Source\PSoC4/Blinker.c ****         *
 315:Generated_Source\PSoC4/Blinker.c ****         * Summary:
 316:Generated_Source\PSoC4/Blinker.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC4/Blinker.c ****         *
 318:Generated_Source\PSoC4/Blinker.c ****         * Parameters:
 319:Generated_Source\PSoC4/Blinker.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC4/Blinker.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC4/Blinker.c ****         *
 322:Generated_Source\PSoC4/Blinker.c ****         * Return:
 323:Generated_Source\PSoC4/Blinker.c ****         *  None
 324:Generated_Source\PSoC4/Blinker.c ****         *
 325:Generated_Source\PSoC4/Blinker.c ****         *******************************************************************************/
 326:Generated_Source\PSoC4/Blinker.c ****         void Blinker_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC4/Blinker.c ****         {
 328:Generated_Source\PSoC4/Blinker.c ****             #if(0 != Blinker_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC4/Blinker.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << Blinker_CTRL_CMPMODE1_SHIF
 330:Generated_Source\PSoC4/Blinker.c ****                                            Blinker_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC4/Blinker.c ****             #else
 332:Generated_Source\PSoC4/Blinker.c ****                 uint8 comparemodemasked = comparemode & Blinker_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC4/Blinker.c ****             #endif /* (0 != Blinker_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC4/Blinker.c **** 
 335:Generated_Source\PSoC4/Blinker.c ****             #if (Blinker_UseControl)
 336:Generated_Source\PSoC4/Blinker.c ****                 Blinker_CONTROL &= ((uint8)(~Blinker_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC4/Blinker.c ****                 Blinker_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC4/Blinker.c ****             #endif /* (Blinker_UseControl) */
 339:Generated_Source\PSoC4/Blinker.c ****         }
 340:Generated_Source\PSoC4/Blinker.c ****     #endif /* Blinker_CompareMode1SW */
 341:Generated_Source\PSoC4/Blinker.c **** 
 342:Generated_Source\PSoC4/Blinker.c **** #if (Blinker_CompareMode2SW)
 343:Generated_Source\PSoC4/Blinker.c **** 
 344:Generated_Source\PSoC4/Blinker.c **** 
 345:Generated_Source\PSoC4/Blinker.c ****     /*******************************************************************************
 346:Generated_Source\PSoC4/Blinker.c ****     * Function Name: Blinker_SetCompareMode2
 347:Generated_Source\PSoC4/Blinker.c ****     ********************************************************************************
 348:Generated_Source\PSoC4/Blinker.c ****     *
 349:Generated_Source\PSoC4/Blinker.c ****     * Summary:
 350:Generated_Source\PSoC4/Blinker.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC4/Blinker.c ****     *
 352:Generated_Source\PSoC4/Blinker.c ****     * Parameters:
 353:Generated_Source\PSoC4/Blinker.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC4/Blinker.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC4/Blinker.c ****     *
 356:Generated_Source\PSoC4/Blinker.c ****     * Return:
 357:Generated_Source\PSoC4/Blinker.c ****     *  None
 358:Generated_Source\PSoC4/Blinker.c ****     *
 359:Generated_Source\PSoC4/Blinker.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/Blinker.c ****     void Blinker_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC4/Blinker.c ****     {
 362:Generated_Source\PSoC4/Blinker.c **** 
 363:Generated_Source\PSoC4/Blinker.c ****         #if(0 != Blinker_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC4/Blinker.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << Blinker_CTRL_CMPMODE2_SHIFT)) 
 365:Generated_Source\PSoC4/Blinker.c ****                                                  Blinker_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC4/Blinker.c ****         #else
 367:Generated_Source\PSoC4/Blinker.c ****             uint8 comparemodemasked = comparemode & Blinker_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC4/Blinker.c ****         #endif /* (0 != Blinker_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC4/Blinker.c **** 
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 9


 370:Generated_Source\PSoC4/Blinker.c ****         #if (Blinker_UseControl)
 371:Generated_Source\PSoC4/Blinker.c ****             Blinker_CONTROL &= ((uint8)(~Blinker_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC4/Blinker.c ****             Blinker_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC4/Blinker.c ****         #endif /* (Blinker_UseControl) */
 374:Generated_Source\PSoC4/Blinker.c ****     }
 375:Generated_Source\PSoC4/Blinker.c ****     #endif /*Blinker_CompareMode2SW */
 376:Generated_Source\PSoC4/Blinker.c **** 
 377:Generated_Source\PSoC4/Blinker.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC4/Blinker.c **** 
 379:Generated_Source\PSoC4/Blinker.c **** 
 380:Generated_Source\PSoC4/Blinker.c **** #if (!Blinker_UsingFixedFunction)
 381:Generated_Source\PSoC4/Blinker.c **** 
 382:Generated_Source\PSoC4/Blinker.c **** 
 383:Generated_Source\PSoC4/Blinker.c ****     /*******************************************************************************
 384:Generated_Source\PSoC4/Blinker.c ****     * Function Name: Blinker_WriteCounter
 385:Generated_Source\PSoC4/Blinker.c ****     ********************************************************************************
 386:Generated_Source\PSoC4/Blinker.c ****     *
 387:Generated_Source\PSoC4/Blinker.c ****     * Summary:
 388:Generated_Source\PSoC4/Blinker.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC4/Blinker.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC4/Blinker.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC4/Blinker.c ****     *  PWM implementation.
 392:Generated_Source\PSoC4/Blinker.c ****     *
 393:Generated_Source\PSoC4/Blinker.c ****     * Parameters:
 394:Generated_Source\PSoC4/Blinker.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC4/Blinker.c ****     *
 396:Generated_Source\PSoC4/Blinker.c ****     * Return:
 397:Generated_Source\PSoC4/Blinker.c ****     *  None
 398:Generated_Source\PSoC4/Blinker.c ****     *
 399:Generated_Source\PSoC4/Blinker.c ****     * Side Effects:
 400:Generated_Source\PSoC4/Blinker.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC4/Blinker.c ****     *
 402:Generated_Source\PSoC4/Blinker.c ****     *******************************************************************************/
 403:Generated_Source\PSoC4/Blinker.c ****     void Blinker_WriteCounter(uint16 counter) \
 404:Generated_Source\PSoC4/Blinker.c ****                                        
 405:Generated_Source\PSoC4/Blinker.c ****     {
  88              		.loc 1 405 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92              		@ link register save eliminated.
  93              	.LVL0:
 406:Generated_Source\PSoC4/Blinker.c ****         CY_SET_REG16(Blinker_COUNTER_LSB_PTR, counter);
  94              		.loc 1 406 0
  95 0000 014B     		ldr	r3, .L8
  96 0002 1880     		strh	r0, [r3]
 407:Generated_Source\PSoC4/Blinker.c ****     }
  97              		.loc 1 407 0
  98              		@ sp needed
  99 0004 7047     		bx	lr
 100              	.L9:
 101 0006 C046     		.align	2
 102              	.L8:
 103 0008 04100F40 		.word	1074728964
 104              		.cfi_endproc
 105              	.LFE6:
 106              		.size	Blinker_WriteCounter, .-Blinker_WriteCounter
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 10


 107              		.section	.text.Blinker_ReadCounter,"ax",%progbits
 108              		.align	2
 109              		.global	Blinker_ReadCounter
 110              		.code	16
 111              		.thumb_func
 112              		.type	Blinker_ReadCounter, %function
 113              	Blinker_ReadCounter:
 114              	.LFB7:
 408:Generated_Source\PSoC4/Blinker.c **** 
 409:Generated_Source\PSoC4/Blinker.c **** 
 410:Generated_Source\PSoC4/Blinker.c ****     /*******************************************************************************
 411:Generated_Source\PSoC4/Blinker.c ****     * Function Name: Blinker_ReadCounter
 412:Generated_Source\PSoC4/Blinker.c ****     ********************************************************************************
 413:Generated_Source\PSoC4/Blinker.c ****     *
 414:Generated_Source\PSoC4/Blinker.c ****     * Summary:
 415:Generated_Source\PSoC4/Blinker.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC4/Blinker.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC4/Blinker.c ****     *
 418:Generated_Source\PSoC4/Blinker.c ****     * Parameters:
 419:Generated_Source\PSoC4/Blinker.c ****     *  None
 420:Generated_Source\PSoC4/Blinker.c ****     *
 421:Generated_Source\PSoC4/Blinker.c ****     * Return:
 422:Generated_Source\PSoC4/Blinker.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC4/Blinker.c ****     *
 424:Generated_Source\PSoC4/Blinker.c ****     *******************************************************************************/
 425:Generated_Source\PSoC4/Blinker.c ****     uint16 Blinker_ReadCounter(void) 
 426:Generated_Source\PSoC4/Blinker.c ****     {
 115              		.loc 1 426 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 427:Generated_Source\PSoC4/Blinker.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC4/Blinker.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC4/Blinker.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC4/Blinker.c ****           (void)CY_GET_REG8(Blinker_COUNTERCAP_LSB_PTR_8BIT);
 120              		.loc 1 430 0
 121 0000 024B     		ldr	r3, .L11
 122 0002 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC4/Blinker.c **** 
 432:Generated_Source\PSoC4/Blinker.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC4/Blinker.c ****         return (CY_GET_REG16(Blinker_CAPTURE_LSB_PTR));
 123              		.loc 1 433 0
 124 0004 024B     		ldr	r3, .L11+4
 125 0006 1888     		ldrh	r0, [r3]
 126 0008 80B2     		uxth	r0, r0
 434:Generated_Source\PSoC4/Blinker.c ****     }
 127              		.loc 1 434 0
 128              		@ sp needed
 129 000a 7047     		bx	lr
 130              	.L12:
 131              		.align	2
 132              	.L11:
 133 000c 12000F40 		.word	1074724882
 134 0010 A4100F40 		.word	1074729124
 135              		.cfi_endproc
 136              	.LFE7:
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 11


 137              		.size	Blinker_ReadCounter, .-Blinker_ReadCounter
 138              		.section	.text.Blinker_WritePeriod,"ax",%progbits
 139              		.align	2
 140              		.global	Blinker_WritePeriod
 141              		.code	16
 142              		.thumb_func
 143              		.type	Blinker_WritePeriod, %function
 144              	Blinker_WritePeriod:
 145              	.LFB9:
 435:Generated_Source\PSoC4/Blinker.c **** 
 436:Generated_Source\PSoC4/Blinker.c ****     #if (Blinker_UseStatus)
 437:Generated_Source\PSoC4/Blinker.c **** 
 438:Generated_Source\PSoC4/Blinker.c **** 
 439:Generated_Source\PSoC4/Blinker.c ****         /*******************************************************************************
 440:Generated_Source\PSoC4/Blinker.c ****         * Function Name: Blinker_ClearFIFO
 441:Generated_Source\PSoC4/Blinker.c ****         ********************************************************************************
 442:Generated_Source\PSoC4/Blinker.c ****         *
 443:Generated_Source\PSoC4/Blinker.c ****         * Summary:
 444:Generated_Source\PSoC4/Blinker.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC4/Blinker.c ****         *
 446:Generated_Source\PSoC4/Blinker.c ****         * Parameters:
 447:Generated_Source\PSoC4/Blinker.c ****         *  None
 448:Generated_Source\PSoC4/Blinker.c ****         *
 449:Generated_Source\PSoC4/Blinker.c ****         * Return:
 450:Generated_Source\PSoC4/Blinker.c ****         *  None
 451:Generated_Source\PSoC4/Blinker.c ****         *
 452:Generated_Source\PSoC4/Blinker.c ****         *******************************************************************************/
 453:Generated_Source\PSoC4/Blinker.c ****         void Blinker_ClearFIFO(void) 
 454:Generated_Source\PSoC4/Blinker.c ****         {
 455:Generated_Source\PSoC4/Blinker.c ****             while(0u != (Blinker_ReadStatusRegister() & Blinker_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC4/Blinker.c ****             {
 457:Generated_Source\PSoC4/Blinker.c ****                 (void)Blinker_ReadCapture();
 458:Generated_Source\PSoC4/Blinker.c ****             }
 459:Generated_Source\PSoC4/Blinker.c ****         }
 460:Generated_Source\PSoC4/Blinker.c **** 
 461:Generated_Source\PSoC4/Blinker.c ****     #endif /* Blinker_UseStatus */
 462:Generated_Source\PSoC4/Blinker.c **** 
 463:Generated_Source\PSoC4/Blinker.c **** #endif /* !Blinker_UsingFixedFunction */
 464:Generated_Source\PSoC4/Blinker.c **** 
 465:Generated_Source\PSoC4/Blinker.c **** 
 466:Generated_Source\PSoC4/Blinker.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/Blinker.c **** * Function Name: Blinker_WritePeriod
 468:Generated_Source\PSoC4/Blinker.c **** ********************************************************************************
 469:Generated_Source\PSoC4/Blinker.c **** *
 470:Generated_Source\PSoC4/Blinker.c **** * Summary:
 471:Generated_Source\PSoC4/Blinker.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC4/Blinker.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC4/Blinker.c **** *
 474:Generated_Source\PSoC4/Blinker.c **** * Parameters:
 475:Generated_Source\PSoC4/Blinker.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC4/Blinker.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC4/Blinker.c **** *
 478:Generated_Source\PSoC4/Blinker.c **** * Return:
 479:Generated_Source\PSoC4/Blinker.c **** *  None
 480:Generated_Source\PSoC4/Blinker.c **** *
 481:Generated_Source\PSoC4/Blinker.c **** *******************************************************************************/
 482:Generated_Source\PSoC4/Blinker.c **** void Blinker_WritePeriod(uint16 period) 
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 12


 483:Generated_Source\PSoC4/Blinker.c **** {
 146              		.loc 1 483 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 151              	.LVL1:
 484:Generated_Source\PSoC4/Blinker.c ****     #if(Blinker_UsingFixedFunction)
 485:Generated_Source\PSoC4/Blinker.c ****         CY_SET_REG16(Blinker_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC4/Blinker.c ****     #else
 487:Generated_Source\PSoC4/Blinker.c ****         CY_SET_REG16(Blinker_PERIOD_LSB_PTR, period);
 152              		.loc 1 487 0
 153 0000 014B     		ldr	r3, .L14
 154 0002 1880     		strh	r0, [r3]
 488:Generated_Source\PSoC4/Blinker.c ****     #endif /* (Blinker_UsingFixedFunction) */
 489:Generated_Source\PSoC4/Blinker.c **** }
 155              		.loc 1 489 0
 156              		@ sp needed
 157 0004 7047     		bx	lr
 158              	.L15:
 159 0006 C046     		.align	2
 160              	.L14:
 161 0008 84100F40 		.word	1074729092
 162              		.cfi_endproc
 163              	.LFE9:
 164              		.size	Blinker_WritePeriod, .-Blinker_WritePeriod
 165              		.section	.text.Blinker_WriteCompare1,"ax",%progbits
 166              		.align	2
 167              		.global	Blinker_WriteCompare1
 168              		.code	16
 169              		.thumb_func
 170              		.type	Blinker_WriteCompare1, %function
 171              	Blinker_WriteCompare1:
 172              	.LFB10:
 490:Generated_Source\PSoC4/Blinker.c **** 
 491:Generated_Source\PSoC4/Blinker.c **** #if (Blinker_UseOneCompareMode)
 492:Generated_Source\PSoC4/Blinker.c **** 
 493:Generated_Source\PSoC4/Blinker.c **** 
 494:Generated_Source\PSoC4/Blinker.c ****     /*******************************************************************************
 495:Generated_Source\PSoC4/Blinker.c ****     * Function Name: Blinker_WriteCompare
 496:Generated_Source\PSoC4/Blinker.c ****     ********************************************************************************
 497:Generated_Source\PSoC4/Blinker.c ****     *
 498:Generated_Source\PSoC4/Blinker.c ****     * Summary:
 499:Generated_Source\PSoC4/Blinker.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC4/Blinker.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC4/Blinker.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC4/Blinker.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC4/Blinker.c ****     *  Dither Mode.
 504:Generated_Source\PSoC4/Blinker.c ****     *
 505:Generated_Source\PSoC4/Blinker.c ****     * Parameters:
 506:Generated_Source\PSoC4/Blinker.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC4/Blinker.c ****     *
 508:Generated_Source\PSoC4/Blinker.c ****     * Return:
 509:Generated_Source\PSoC4/Blinker.c ****     *  None
 510:Generated_Source\PSoC4/Blinker.c ****     *
 511:Generated_Source\PSoC4/Blinker.c ****     * Side Effects:
 512:Generated_Source\PSoC4/Blinker.c ****     *  This function is only available if the PWM mode parameter is set to
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 13


 513:Generated_Source\PSoC4/Blinker.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC4/Blinker.c ****     *
 515:Generated_Source\PSoC4/Blinker.c ****     *******************************************************************************/
 516:Generated_Source\PSoC4/Blinker.c ****     void Blinker_WriteCompare(uint16 compare) \
 517:Generated_Source\PSoC4/Blinker.c ****                                        
 518:Generated_Source\PSoC4/Blinker.c ****     {
 519:Generated_Source\PSoC4/Blinker.c ****         #if(Blinker_UsingFixedFunction)
 520:Generated_Source\PSoC4/Blinker.c ****             CY_SET_REG16(Blinker_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC4/Blinker.c ****         #else
 522:Generated_Source\PSoC4/Blinker.c ****             CY_SET_REG16(Blinker_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC4/Blinker.c ****         #endif /* (Blinker_UsingFixedFunction) */
 524:Generated_Source\PSoC4/Blinker.c **** 
 525:Generated_Source\PSoC4/Blinker.c ****         #if (Blinker_PWMMode == Blinker__B_PWM__DITHER)
 526:Generated_Source\PSoC4/Blinker.c ****             #if(Blinker_UsingFixedFunction)
 527:Generated_Source\PSoC4/Blinker.c ****                 CY_SET_REG16(Blinker_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC4/Blinker.c ****             #else
 529:Generated_Source\PSoC4/Blinker.c ****                 CY_SET_REG16(Blinker_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC4/Blinker.c ****             #endif /* (Blinker_UsingFixedFunction) */
 531:Generated_Source\PSoC4/Blinker.c ****         #endif /* (Blinker_PWMMode == Blinker__B_PWM__DITHER) */
 532:Generated_Source\PSoC4/Blinker.c ****     }
 533:Generated_Source\PSoC4/Blinker.c **** 
 534:Generated_Source\PSoC4/Blinker.c **** 
 535:Generated_Source\PSoC4/Blinker.c **** #else
 536:Generated_Source\PSoC4/Blinker.c **** 
 537:Generated_Source\PSoC4/Blinker.c **** 
 538:Generated_Source\PSoC4/Blinker.c ****     /*******************************************************************************
 539:Generated_Source\PSoC4/Blinker.c ****     * Function Name: Blinker_WriteCompare1
 540:Generated_Source\PSoC4/Blinker.c ****     ********************************************************************************
 541:Generated_Source\PSoC4/Blinker.c ****     *
 542:Generated_Source\PSoC4/Blinker.c ****     * Summary:
 543:Generated_Source\PSoC4/Blinker.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC4/Blinker.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC4/Blinker.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC4/Blinker.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC4/Blinker.c ****     *
 548:Generated_Source\PSoC4/Blinker.c ****     * Parameters:
 549:Generated_Source\PSoC4/Blinker.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC4/Blinker.c ****     *
 551:Generated_Source\PSoC4/Blinker.c ****     * Return:
 552:Generated_Source\PSoC4/Blinker.c ****     *  None
 553:Generated_Source\PSoC4/Blinker.c ****     *
 554:Generated_Source\PSoC4/Blinker.c ****     *******************************************************************************/
 555:Generated_Source\PSoC4/Blinker.c ****     void Blinker_WriteCompare1(uint16 compare) \
 556:Generated_Source\PSoC4/Blinker.c ****                                         
 557:Generated_Source\PSoC4/Blinker.c ****     {
 173              		.loc 1 557 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178              	.LVL2:
 558:Generated_Source\PSoC4/Blinker.c ****         #if(Blinker_UsingFixedFunction)
 559:Generated_Source\PSoC4/Blinker.c ****             CY_SET_REG16(Blinker_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC4/Blinker.c ****         #else
 561:Generated_Source\PSoC4/Blinker.c ****             CY_SET_REG16(Blinker_COMPARE1_LSB_PTR, compare);
 179              		.loc 1 561 0
 180 0000 014B     		ldr	r3, .L17
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 14


 181 0002 1880     		strh	r0, [r3]
 562:Generated_Source\PSoC4/Blinker.c ****         #endif /* (Blinker_UsingFixedFunction) */
 563:Generated_Source\PSoC4/Blinker.c ****     }
 182              		.loc 1 563 0
 183              		@ sp needed
 184 0004 7047     		bx	lr
 185              	.L18:
 186 0006 C046     		.align	2
 187              	.L17:
 188 0008 44100F40 		.word	1074729028
 189              		.cfi_endproc
 190              	.LFE10:
 191              		.size	Blinker_WriteCompare1, .-Blinker_WriteCompare1
 192              		.section	.text.Blinker_WriteCompare2,"ax",%progbits
 193              		.align	2
 194              		.global	Blinker_WriteCompare2
 195              		.code	16
 196              		.thumb_func
 197              		.type	Blinker_WriteCompare2, %function
 198              	Blinker_WriteCompare2:
 199              	.LFB11:
 564:Generated_Source\PSoC4/Blinker.c **** 
 565:Generated_Source\PSoC4/Blinker.c **** 
 566:Generated_Source\PSoC4/Blinker.c ****     /*******************************************************************************
 567:Generated_Source\PSoC4/Blinker.c ****     * Function Name: Blinker_WriteCompare2
 568:Generated_Source\PSoC4/Blinker.c ****     ********************************************************************************
 569:Generated_Source\PSoC4/Blinker.c ****     *
 570:Generated_Source\PSoC4/Blinker.c ****     * Summary:
 571:Generated_Source\PSoC4/Blinker.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC4/Blinker.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC4/Blinker.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC4/Blinker.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC4/Blinker.c ****     *  mode.
 576:Generated_Source\PSoC4/Blinker.c ****     *
 577:Generated_Source\PSoC4/Blinker.c ****     * Parameters:
 578:Generated_Source\PSoC4/Blinker.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC4/Blinker.c ****     *
 580:Generated_Source\PSoC4/Blinker.c ****     * Return:
 581:Generated_Source\PSoC4/Blinker.c ****     *  None
 582:Generated_Source\PSoC4/Blinker.c ****     *
 583:Generated_Source\PSoC4/Blinker.c ****     *******************************************************************************/
 584:Generated_Source\PSoC4/Blinker.c ****     void Blinker_WriteCompare2(uint16 compare) \
 585:Generated_Source\PSoC4/Blinker.c ****                                         
 586:Generated_Source\PSoC4/Blinker.c ****     {
 200              		.loc 1 586 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 205              	.LVL3:
 587:Generated_Source\PSoC4/Blinker.c ****         #if(Blinker_UsingFixedFunction)
 588:Generated_Source\PSoC4/Blinker.c ****             CY_SET_REG16(Blinker_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC4/Blinker.c ****         #else
 590:Generated_Source\PSoC4/Blinker.c ****             CY_SET_REG16(Blinker_COMPARE2_LSB_PTR, compare);
 206              		.loc 1 590 0
 207 0000 014B     		ldr	r3, .L20
 208 0002 1880     		strh	r0, [r3]
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 15


 591:Generated_Source\PSoC4/Blinker.c ****         #endif /* (Blinker_UsingFixedFunction) */
 592:Generated_Source\PSoC4/Blinker.c ****     }
 209              		.loc 1 592 0
 210              		@ sp needed
 211 0004 7047     		bx	lr
 212              	.L21:
 213 0006 C046     		.align	2
 214              	.L20:
 215 0008 64100F40 		.word	1074729060
 216              		.cfi_endproc
 217              	.LFE11:
 218              		.size	Blinker_WriteCompare2, .-Blinker_WriteCompare2
 219              		.section	.text.Blinker_SetInterruptMode,"ax",%progbits
 220              		.align	2
 221              		.global	Blinker_SetInterruptMode
 222              		.code	16
 223              		.thumb_func
 224              		.type	Blinker_SetInterruptMode, %function
 225              	Blinker_SetInterruptMode:
 226              	.LFB12:
 593:Generated_Source\PSoC4/Blinker.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC4/Blinker.c **** 
 595:Generated_Source\PSoC4/Blinker.c **** #if (Blinker_DeadBandUsed)
 596:Generated_Source\PSoC4/Blinker.c **** 
 597:Generated_Source\PSoC4/Blinker.c **** 
 598:Generated_Source\PSoC4/Blinker.c ****     /*******************************************************************************
 599:Generated_Source\PSoC4/Blinker.c ****     * Function Name: Blinker_WriteDeadTime
 600:Generated_Source\PSoC4/Blinker.c ****     ********************************************************************************
 601:Generated_Source\PSoC4/Blinker.c ****     *
 602:Generated_Source\PSoC4/Blinker.c ****     * Summary:
 603:Generated_Source\PSoC4/Blinker.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC4/Blinker.c ****     *
 605:Generated_Source\PSoC4/Blinker.c ****     * Parameters:
 606:Generated_Source\PSoC4/Blinker.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC4/Blinker.c ****     *
 608:Generated_Source\PSoC4/Blinker.c ****     * Return:
 609:Generated_Source\PSoC4/Blinker.c ****     *  None
 610:Generated_Source\PSoC4/Blinker.c ****     *
 611:Generated_Source\PSoC4/Blinker.c ****     *******************************************************************************/
 612:Generated_Source\PSoC4/Blinker.c ****     void Blinker_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC4/Blinker.c ****     {
 614:Generated_Source\PSoC4/Blinker.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC4/Blinker.c ****         #if(!Blinker_DeadBand2_4)
 616:Generated_Source\PSoC4/Blinker.c ****             CY_SET_REG8(Blinker_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC4/Blinker.c ****         #else
 618:Generated_Source\PSoC4/Blinker.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC4/Blinker.c ****             /* Clear existing data */
 620:Generated_Source\PSoC4/Blinker.c ****             Blinker_DEADBAND_COUNT &= ((uint8)(~Blinker_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC4/Blinker.c **** 
 622:Generated_Source\PSoC4/Blinker.c ****             /* Set new dead time */
 623:Generated_Source\PSoC4/Blinker.c ****             #if(Blinker_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC4/Blinker.c ****                 Blinker_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << Blinker_DEADBAND_COUNT_SHIFT)
 625:Generated_Source\PSoC4/Blinker.c ****                                                     Blinker_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC4/Blinker.c ****             #else
 627:Generated_Source\PSoC4/Blinker.c ****                 Blinker_DEADBAND_COUNT |= deadtime & Blinker_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC4/Blinker.c ****             #endif /* (Blinker_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC4/Blinker.c **** 
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 16


 630:Generated_Source\PSoC4/Blinker.c ****         #endif /* (!Blinker_DeadBand2_4) */
 631:Generated_Source\PSoC4/Blinker.c ****     }
 632:Generated_Source\PSoC4/Blinker.c **** 
 633:Generated_Source\PSoC4/Blinker.c **** 
 634:Generated_Source\PSoC4/Blinker.c ****     /*******************************************************************************
 635:Generated_Source\PSoC4/Blinker.c ****     * Function Name: Blinker_ReadDeadTime
 636:Generated_Source\PSoC4/Blinker.c ****     ********************************************************************************
 637:Generated_Source\PSoC4/Blinker.c ****     *
 638:Generated_Source\PSoC4/Blinker.c ****     * Summary:
 639:Generated_Source\PSoC4/Blinker.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC4/Blinker.c ****     *
 641:Generated_Source\PSoC4/Blinker.c ****     * Parameters:
 642:Generated_Source\PSoC4/Blinker.c ****     *  None
 643:Generated_Source\PSoC4/Blinker.c ****     *
 644:Generated_Source\PSoC4/Blinker.c ****     * Return:
 645:Generated_Source\PSoC4/Blinker.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC4/Blinker.c ****     *
 647:Generated_Source\PSoC4/Blinker.c ****     *******************************************************************************/
 648:Generated_Source\PSoC4/Blinker.c ****     uint8 Blinker_ReadDeadTime(void) 
 649:Generated_Source\PSoC4/Blinker.c ****     {
 650:Generated_Source\PSoC4/Blinker.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC4/Blinker.c ****         #if(!Blinker_DeadBand2_4)
 652:Generated_Source\PSoC4/Blinker.c ****             return (CY_GET_REG8(Blinker_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC4/Blinker.c ****         #else
 654:Generated_Source\PSoC4/Blinker.c **** 
 655:Generated_Source\PSoC4/Blinker.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC4/Blinker.c ****             #if(Blinker_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC4/Blinker.c ****                 return ((uint8)(((uint8)(Blinker_DEADBAND_COUNT & Blinker_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC4/Blinker.c ****                                                                            Blinker_DEADBAND_COUNT_S
 659:Generated_Source\PSoC4/Blinker.c ****             #else
 660:Generated_Source\PSoC4/Blinker.c ****                 return (Blinker_DEADBAND_COUNT & Blinker_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC4/Blinker.c ****             #endif /* (Blinker_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC4/Blinker.c ****         #endif /* (!Blinker_DeadBand2_4) */
 663:Generated_Source\PSoC4/Blinker.c ****     }
 664:Generated_Source\PSoC4/Blinker.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC4/Blinker.c **** 
 666:Generated_Source\PSoC4/Blinker.c **** #if (Blinker_UseStatus || Blinker_UsingFixedFunction)
 667:Generated_Source\PSoC4/Blinker.c **** 
 668:Generated_Source\PSoC4/Blinker.c **** 
 669:Generated_Source\PSoC4/Blinker.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/Blinker.c ****     * Function Name: Blinker_SetInterruptMode
 671:Generated_Source\PSoC4/Blinker.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/Blinker.c ****     *
 673:Generated_Source\PSoC4/Blinker.c ****     * Summary:
 674:Generated_Source\PSoC4/Blinker.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC4/Blinker.c ****     *  source status register.
 676:Generated_Source\PSoC4/Blinker.c ****     *
 677:Generated_Source\PSoC4/Blinker.c ****     * Parameters:
 678:Generated_Source\PSoC4/Blinker.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC4/Blinker.c ****     *
 680:Generated_Source\PSoC4/Blinker.c ****     * Return:
 681:Generated_Source\PSoC4/Blinker.c ****     *  None
 682:Generated_Source\PSoC4/Blinker.c ****     *
 683:Generated_Source\PSoC4/Blinker.c ****     *******************************************************************************/
 684:Generated_Source\PSoC4/Blinker.c ****     void Blinker_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC4/Blinker.c ****     {
 227              		.loc 1 685 0
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 17


 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 232              	.LVL4:
 686:Generated_Source\PSoC4/Blinker.c ****         CY_SET_REG8(Blinker_STATUS_MASK_PTR, interruptMode);
 233              		.loc 1 686 0
 234 0000 014B     		ldr	r3, .L23
 235 0002 1870     		strb	r0, [r3]
 687:Generated_Source\PSoC4/Blinker.c ****     }
 236              		.loc 1 687 0
 237              		@ sp needed
 238 0004 7047     		bx	lr
 239              	.L24:
 240 0006 C046     		.align	2
 241              	.L23:
 242 0008 83000F40 		.word	1074724995
 243              		.cfi_endproc
 244              	.LFE12:
 245              		.size	Blinker_SetInterruptMode, .-Blinker_SetInterruptMode
 246              		.section	.text.Blinker_ReadStatusRegister,"ax",%progbits
 247              		.align	2
 248              		.global	Blinker_ReadStatusRegister
 249              		.code	16
 250              		.thumb_func
 251              		.type	Blinker_ReadStatusRegister, %function
 252              	Blinker_ReadStatusRegister:
 253              	.LFB13:
 688:Generated_Source\PSoC4/Blinker.c **** 
 689:Generated_Source\PSoC4/Blinker.c **** 
 690:Generated_Source\PSoC4/Blinker.c ****     /*******************************************************************************
 691:Generated_Source\PSoC4/Blinker.c ****     * Function Name: Blinker_ReadStatusRegister
 692:Generated_Source\PSoC4/Blinker.c ****     ********************************************************************************
 693:Generated_Source\PSoC4/Blinker.c ****     *
 694:Generated_Source\PSoC4/Blinker.c ****     * Summary:
 695:Generated_Source\PSoC4/Blinker.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC4/Blinker.c ****     *
 697:Generated_Source\PSoC4/Blinker.c ****     * Parameters:
 698:Generated_Source\PSoC4/Blinker.c ****     *  None
 699:Generated_Source\PSoC4/Blinker.c ****     *
 700:Generated_Source\PSoC4/Blinker.c ****     * Return:
 701:Generated_Source\PSoC4/Blinker.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC4/Blinker.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC4/Blinker.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC4/Blinker.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC4/Blinker.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC4/Blinker.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC4/Blinker.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC4/Blinker.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC4/Blinker.c ****     *
 710:Generated_Source\PSoC4/Blinker.c ****     *******************************************************************************/
 711:Generated_Source\PSoC4/Blinker.c ****     uint8 Blinker_ReadStatusRegister(void) 
 712:Generated_Source\PSoC4/Blinker.c ****     {
 254              		.loc 1 712 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 18


 258              		@ link register save eliminated.
 713:Generated_Source\PSoC4/Blinker.c ****         return (CY_GET_REG8(Blinker_STATUS_PTR));
 259              		.loc 1 713 0
 260 0000 014B     		ldr	r3, .L26
 261 0002 1878     		ldrb	r0, [r3]
 262 0004 C0B2     		uxtb	r0, r0
 714:Generated_Source\PSoC4/Blinker.c ****     }
 263              		.loc 1 714 0
 264              		@ sp needed
 265 0006 7047     		bx	lr
 266              	.L27:
 267              		.align	2
 268              	.L26:
 269 0008 63000F40 		.word	1074724963
 270              		.cfi_endproc
 271              	.LFE13:
 272              		.size	Blinker_ReadStatusRegister, .-Blinker_ReadStatusRegister
 273              		.section	.text.Blinker_ReadControlRegister,"ax",%progbits
 274              		.align	2
 275              		.global	Blinker_ReadControlRegister
 276              		.code	16
 277              		.thumb_func
 278              		.type	Blinker_ReadControlRegister, %function
 279              	Blinker_ReadControlRegister:
 280              	.LFB14:
 715:Generated_Source\PSoC4/Blinker.c **** 
 716:Generated_Source\PSoC4/Blinker.c **** #endif /* (Blinker_UseStatus || Blinker_UsingFixedFunction) */
 717:Generated_Source\PSoC4/Blinker.c **** 
 718:Generated_Source\PSoC4/Blinker.c **** 
 719:Generated_Source\PSoC4/Blinker.c **** #if (Blinker_UseControl)
 720:Generated_Source\PSoC4/Blinker.c **** 
 721:Generated_Source\PSoC4/Blinker.c **** 
 722:Generated_Source\PSoC4/Blinker.c ****     /*******************************************************************************
 723:Generated_Source\PSoC4/Blinker.c ****     * Function Name: Blinker_ReadControlRegister
 724:Generated_Source\PSoC4/Blinker.c ****     ********************************************************************************
 725:Generated_Source\PSoC4/Blinker.c ****     *
 726:Generated_Source\PSoC4/Blinker.c ****     * Summary:
 727:Generated_Source\PSoC4/Blinker.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC4/Blinker.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC4/Blinker.c ****     *
 730:Generated_Source\PSoC4/Blinker.c ****     * Parameters:
 731:Generated_Source\PSoC4/Blinker.c ****     *  None
 732:Generated_Source\PSoC4/Blinker.c ****     *
 733:Generated_Source\PSoC4/Blinker.c ****     * Return:
 734:Generated_Source\PSoC4/Blinker.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC4/Blinker.c ****     *
 736:Generated_Source\PSoC4/Blinker.c ****     *******************************************************************************/
 737:Generated_Source\PSoC4/Blinker.c ****     uint8 Blinker_ReadControlRegister(void) 
 738:Generated_Source\PSoC4/Blinker.c ****     {
 281              		.loc 1 738 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 739:Generated_Source\PSoC4/Blinker.c ****         uint8 result;
 740:Generated_Source\PSoC4/Blinker.c **** 
 741:Generated_Source\PSoC4/Blinker.c ****         result = CY_GET_REG8(Blinker_CONTROL_PTR);
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 19


 286              		.loc 1 741 0
 287 0000 014B     		ldr	r3, .L29
 288 0002 1878     		ldrb	r0, [r3]
 289 0004 C0B2     		uxtb	r0, r0
 290              	.LVL5:
 742:Generated_Source\PSoC4/Blinker.c ****         return (result);
 743:Generated_Source\PSoC4/Blinker.c ****     }
 291              		.loc 1 743 0
 292              		@ sp needed
 293 0006 7047     		bx	lr
 294              	.L30:
 295              		.align	2
 296              	.L29:
 297 0008 73000F40 		.word	1074724979
 298              		.cfi_endproc
 299              	.LFE14:
 300              		.size	Blinker_ReadControlRegister, .-Blinker_ReadControlRegister
 301              		.section	.text.Blinker_WriteControlRegister,"ax",%progbits
 302              		.align	2
 303              		.global	Blinker_WriteControlRegister
 304              		.code	16
 305              		.thumb_func
 306              		.type	Blinker_WriteControlRegister, %function
 307              	Blinker_WriteControlRegister:
 308              	.LFB15:
 744:Generated_Source\PSoC4/Blinker.c **** 
 745:Generated_Source\PSoC4/Blinker.c **** 
 746:Generated_Source\PSoC4/Blinker.c ****     /*******************************************************************************
 747:Generated_Source\PSoC4/Blinker.c ****     * Function Name: Blinker_WriteControlRegister
 748:Generated_Source\PSoC4/Blinker.c ****     ********************************************************************************
 749:Generated_Source\PSoC4/Blinker.c ****     *
 750:Generated_Source\PSoC4/Blinker.c ****     * Summary:
 751:Generated_Source\PSoC4/Blinker.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC4/Blinker.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC4/Blinker.c ****     *
 754:Generated_Source\PSoC4/Blinker.c ****     * Parameters:
 755:Generated_Source\PSoC4/Blinker.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC4/Blinker.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC4/Blinker.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC4/Blinker.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC4/Blinker.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC4/Blinker.c ****     *
 761:Generated_Source\PSoC4/Blinker.c ****     * Return:
 762:Generated_Source\PSoC4/Blinker.c ****     *  None
 763:Generated_Source\PSoC4/Blinker.c ****     *
 764:Generated_Source\PSoC4/Blinker.c ****     *******************************************************************************/
 765:Generated_Source\PSoC4/Blinker.c ****     void Blinker_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC4/Blinker.c ****     {
 309              		.loc 1 766 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314              	.LVL6:
 767:Generated_Source\PSoC4/Blinker.c ****         CY_SET_REG8(Blinker_CONTROL_PTR, control);
 315              		.loc 1 767 0
 316 0000 014B     		ldr	r3, .L32
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 20


 317 0002 1870     		strb	r0, [r3]
 768:Generated_Source\PSoC4/Blinker.c ****     }
 318              		.loc 1 768 0
 319              		@ sp needed
 320 0004 7047     		bx	lr
 321              	.L33:
 322 0006 C046     		.align	2
 323              	.L32:
 324 0008 73000F40 		.word	1074724979
 325              		.cfi_endproc
 326              	.LFE15:
 327              		.size	Blinker_WriteControlRegister, .-Blinker_WriteControlRegister
 328              		.section	.text.Blinker_ReadCapture,"ax",%progbits
 329              		.align	2
 330              		.global	Blinker_ReadCapture
 331              		.code	16
 332              		.thumb_func
 333              		.type	Blinker_ReadCapture, %function
 334              	Blinker_ReadCapture:
 335              	.LFB16:
 769:Generated_Source\PSoC4/Blinker.c **** 
 770:Generated_Source\PSoC4/Blinker.c **** #endif /* (Blinker_UseControl) */
 771:Generated_Source\PSoC4/Blinker.c **** 
 772:Generated_Source\PSoC4/Blinker.c **** 
 773:Generated_Source\PSoC4/Blinker.c **** #if (!Blinker_UsingFixedFunction)
 774:Generated_Source\PSoC4/Blinker.c **** 
 775:Generated_Source\PSoC4/Blinker.c **** 
 776:Generated_Source\PSoC4/Blinker.c ****     /*******************************************************************************
 777:Generated_Source\PSoC4/Blinker.c ****     * Function Name: Blinker_ReadCapture
 778:Generated_Source\PSoC4/Blinker.c ****     ********************************************************************************
 779:Generated_Source\PSoC4/Blinker.c ****     *
 780:Generated_Source\PSoC4/Blinker.c ****     * Summary:
 781:Generated_Source\PSoC4/Blinker.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC4/Blinker.c ****     *
 783:Generated_Source\PSoC4/Blinker.c ****     * Parameters:
 784:Generated_Source\PSoC4/Blinker.c ****     *  None
 785:Generated_Source\PSoC4/Blinker.c ****     *
 786:Generated_Source\PSoC4/Blinker.c ****     * Return:
 787:Generated_Source\PSoC4/Blinker.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC4/Blinker.c ****     *
 789:Generated_Source\PSoC4/Blinker.c ****     *******************************************************************************/
 790:Generated_Source\PSoC4/Blinker.c ****     uint16 Blinker_ReadCapture(void) 
 791:Generated_Source\PSoC4/Blinker.c ****     {
 336              		.loc 1 791 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 792:Generated_Source\PSoC4/Blinker.c ****         return (CY_GET_REG16(Blinker_CAPTURE_LSB_PTR));
 341              		.loc 1 792 0
 342 0000 014B     		ldr	r3, .L35
 343 0002 1888     		ldrh	r0, [r3]
 344 0004 80B2     		uxth	r0, r0
 793:Generated_Source\PSoC4/Blinker.c ****     }
 345              		.loc 1 793 0
 346              		@ sp needed
 347 0006 7047     		bx	lr
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 21


 348              	.L36:
 349              		.align	2
 350              	.L35:
 351 0008 A4100F40 		.word	1074729124
 352              		.cfi_endproc
 353              	.LFE16:
 354              		.size	Blinker_ReadCapture, .-Blinker_ReadCapture
 355              		.section	.text.Blinker_ClearFIFO,"ax",%progbits
 356              		.align	2
 357              		.global	Blinker_ClearFIFO
 358              		.code	16
 359              		.thumb_func
 360              		.type	Blinker_ClearFIFO, %function
 361              	Blinker_ClearFIFO:
 362              	.LFB8:
 454:Generated_Source\PSoC4/Blinker.c ****             while(0u != (Blinker_ReadStatusRegister() & Blinker_STATUS_FIFONEMPTY))
 363              		.loc 1 454 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367 0000 10B5     		push	{r4, lr}
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 4, -8
 370              		.cfi_offset 14, -4
 455:Generated_Source\PSoC4/Blinker.c ****             {
 371              		.loc 1 455 0
 372 0002 01E0     		b	.L38
 373              	.L39:
 457:Generated_Source\PSoC4/Blinker.c ****             }
 374              		.loc 1 457 0
 375 0004 FFF7FEFF 		bl	Blinker_ReadCapture
 376              	.LVL7:
 377              	.L38:
 455:Generated_Source\PSoC4/Blinker.c ****             {
 378              		.loc 1 455 0
 379 0008 FFF7FEFF 		bl	Blinker_ReadStatusRegister
 380              	.LVL8:
 381 000c C306     		lsls	r3, r0, #27
 382 000e F9D4     		bmi	.L39
 459:Generated_Source\PSoC4/Blinker.c **** 
 383              		.loc 1 459 0
 384              		@ sp needed
 385 0010 10BD     		pop	{r4, pc}
 386              		.cfi_endproc
 387              	.LFE8:
 388              		.size	Blinker_ClearFIFO, .-Blinker_ClearFIFO
 389 0012 C046     		.section	.text.Blinker_Init,"ax",%progbits
 390              		.align	2
 391              		.global	Blinker_Init
 392              		.code	16
 393              		.thumb_func
 394              		.type	Blinker_Init, %function
 395              	Blinker_Init:
 396              	.LFB3:
  85:Generated_Source\PSoC4/Blinker.c ****     #if (Blinker_UsingFixedFunction || Blinker_UseControl)
 397              		.loc 1 85 0
 398              		.cfi_startproc
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 22


 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401 0000 70B5     		push	{r4, r5, r6, lr}
 402              		.cfi_def_cfa_offset 16
 403              		.cfi_offset 4, -16
 404              		.cfi_offset 5, -12
 405              		.cfi_offset 6, -8
 406              		.cfi_offset 14, -4
 117:Generated_Source\PSoC4/Blinker.c ****                 ((uint8)(~Blinker_CTRL_CMPMODE1_MASK));
 407              		.loc 1 117 0
 408 0002 1849     		ldr	r1, .L41
 409 0004 0B78     		ldrb	r3, [r1]
 410 0006 3F22     		movs	r2, #63
 411 0008 9343     		bics	r3, r2
 412              	.LVL9:
 119:Generated_Source\PSoC4/Blinker.c ****                                    Blinker_DEFAULT_COMPARE1_MODE;
 413              		.loc 1 119 0
 414 000a 0922     		movs	r2, #9
 415 000c 1343     		orrs	r3, r2
 416              	.LVL10:
 417 000e DBB2     		uxtb	r3, r3
 418 0010 0B70     		strb	r3, [r1]
 129:Generated_Source\PSoC4/Blinker.c ****             Blinker_AUX_CONTROLDP1 |= (Blinker_AUX_CTRL_FIFO0_CLR);
 419              		.loc 1 129 0
 420 0012 1549     		ldr	r1, .L41+4
 421 0014 0A78     		ldrb	r2, [r1]
 422 0016 0123     		movs	r3, #1
 423 0018 1A43     		orrs	r2, r3
 424 001a D2B2     		uxtb	r2, r2
 425 001c 0A70     		strb	r2, [r1]
 130:Generated_Source\PSoC4/Blinker.c ****         #endif /* (Blinker_Resolution == 8) */
 426              		.loc 1 130 0
 427 001e 134C     		ldr	r4, .L41+8
 428 0020 2278     		ldrb	r2, [r4]
 429 0022 1343     		orrs	r3, r2
 430 0024 DBB2     		uxtb	r3, r3
 431 0026 2370     		strb	r3, [r4]
 133:Generated_Source\PSoC4/Blinker.c ****     #endif /* (!Blinker_UsingFixedFunction) */
 432              		.loc 1 133 0
 433 0028 114D     		ldr	r5, .L41+12
 434 002a 2800     		movs	r0, r5
 435 002c FFF7FEFF 		bl	Blinker_WriteCounter
 436              	.LVL11:
 136:Generated_Source\PSoC4/Blinker.c **** 
 437              		.loc 1 136 0
 438 0030 2800     		movs	r0, r5
 439 0032 FFF7FEFF 		bl	Blinker_WritePeriod
 440              	.LVL12:
 141:Generated_Source\PSoC4/Blinker.c ****             Blinker_WriteCompare2(Blinker_INIT_COMPARE_VALUE2);
 441              		.loc 1 141 0
 442 0036 0F4D     		ldr	r5, .L41+16
 443 0038 2800     		movs	r0, r5
 444 003a FFF7FEFF 		bl	Blinker_WriteCompare1
 445              	.LVL13:
 142:Generated_Source\PSoC4/Blinker.c ****         #endif /* (Blinker_UseOneCompareMode) */
 446              		.loc 1 142 0
 447 003e 2800     		movs	r0, r5
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 23


 448 0040 FFF7FEFF 		bl	Blinker_WriteCompare2
 449              	.LVL14:
 154:Generated_Source\PSoC4/Blinker.c ****     #endif /* (Blinker_UseStatus || Blinker_UsingFixedFunction) */
 450              		.loc 1 154 0
 451 0044 0020     		movs	r0, #0
 452 0046 FFF7FEFF 		bl	Blinker_SetInterruptMode
 453              	.LVL15:
 167:Generated_Source\PSoC4/Blinker.c ****             /* Use the interrupt output of the status register for IRQ output */
 454              		.loc 1 167 0
 455 004a FFF7FEFF 		bl	CyEnterCriticalSection
 456              	.LVL16:
 169:Generated_Source\PSoC4/Blinker.c **** 
 457              		.loc 1 169 0
 458 004e 2278     		ldrb	r2, [r4]
 459 0050 1023     		movs	r3, #16
 460 0052 1343     		orrs	r3, r2
 461 0054 DBB2     		uxtb	r3, r3
 462 0056 2370     		strb	r3, [r4]
 172:Generated_Source\PSoC4/Blinker.c **** 
 463              		.loc 1 172 0
 464 0058 FFF7FEFF 		bl	CyExitCriticalSection
 465              	.LVL17:
 176:Generated_Source\PSoC4/Blinker.c ****         #endif /* (Blinker_UseStatus) */
 466              		.loc 1 176 0
 467 005c FFF7FEFF 		bl	Blinker_ClearFIFO
 468              	.LVL18:
 179:Generated_Source\PSoC4/Blinker.c **** 
 469              		.loc 1 179 0
 470              		@ sp needed
 471 0060 70BD     		pop	{r4, r5, r6, pc}
 472              	.L42:
 473 0062 C046     		.align	2
 474              	.L41:
 475 0064 73000F40 		.word	1074724979
 476 0068 92000F40 		.word	1074725010
 477 006c 93000F40 		.word	1074725011
 478 0070 FFFF0000 		.word	65535
 479 0074 10270000 		.word	10000
 480              		.cfi_endproc
 481              	.LFE3:
 482              		.size	Blinker_Init, .-Blinker_Init
 483              		.section	.text.Blinker_Start,"ax",%progbits
 484              		.align	2
 485              		.global	Blinker_Start
 486              		.code	16
 487              		.thumb_func
 488              		.type	Blinker_Start, %function
 489              	Blinker_Start:
 490              	.LFB2:
  56:Generated_Source\PSoC4/Blinker.c ****     /* If not Initialized then initialize all required hardware and software */
 491              		.loc 1 56 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495 0000 10B5     		push	{r4, lr}
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 4, -8
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 24


 498              		.cfi_offset 14, -4
  58:Generated_Source\PSoC4/Blinker.c ****     {
 499              		.loc 1 58 0
 500 0002 064B     		ldr	r3, .L45
 501 0004 1B78     		ldrb	r3, [r3]
 502 0006 002B     		cmp	r3, #0
 503 0008 04D1     		bne	.L44
  60:Generated_Source\PSoC4/Blinker.c ****         Blinker_initVar = 1u;
 504              		.loc 1 60 0
 505 000a FFF7FEFF 		bl	Blinker_Init
 506              	.LVL19:
  61:Generated_Source\PSoC4/Blinker.c ****     }
 507              		.loc 1 61 0
 508 000e 0122     		movs	r2, #1
 509 0010 024B     		ldr	r3, .L45
 510 0012 1A70     		strb	r2, [r3]
 511              	.L44:
  63:Generated_Source\PSoC4/Blinker.c **** 
 512              		.loc 1 63 0
 513 0014 FFF7FEFF 		bl	Blinker_Enable
 514              	.LVL20:
  65:Generated_Source\PSoC4/Blinker.c **** 
 515              		.loc 1 65 0
 516              		@ sp needed
 517 0018 10BD     		pop	{r4, pc}
 518              	.L46:
 519 001a C046     		.align	2
 520              	.L45:
 521 001c 00000000 		.word	.LANCHOR0
 522              		.cfi_endproc
 523              	.LFE2:
 524              		.size	Blinker_Start, .-Blinker_Start
 525              		.section	.text.Blinker_ReadCompare1,"ax",%progbits
 526              		.align	2
 527              		.global	Blinker_ReadCompare1
 528              		.code	16
 529              		.thumb_func
 530              		.type	Blinker_ReadCompare1, %function
 531              	Blinker_ReadCompare1:
 532              	.LFB17:
 794:Generated_Source\PSoC4/Blinker.c **** 
 795:Generated_Source\PSoC4/Blinker.c **** #endif /* (!Blinker_UsingFixedFunction) */
 796:Generated_Source\PSoC4/Blinker.c **** 
 797:Generated_Source\PSoC4/Blinker.c **** 
 798:Generated_Source\PSoC4/Blinker.c **** #if (Blinker_UseOneCompareMode)
 799:Generated_Source\PSoC4/Blinker.c **** 
 800:Generated_Source\PSoC4/Blinker.c **** 
 801:Generated_Source\PSoC4/Blinker.c ****     /*******************************************************************************
 802:Generated_Source\PSoC4/Blinker.c ****     * Function Name: Blinker_ReadCompare
 803:Generated_Source\PSoC4/Blinker.c ****     ********************************************************************************
 804:Generated_Source\PSoC4/Blinker.c ****     *
 805:Generated_Source\PSoC4/Blinker.c ****     * Summary:
 806:Generated_Source\PSoC4/Blinker.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC4/Blinker.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC4/Blinker.c ****     *
 809:Generated_Source\PSoC4/Blinker.c ****     * Parameters:
 810:Generated_Source\PSoC4/Blinker.c ****     *  None
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 25


 811:Generated_Source\PSoC4/Blinker.c ****     *
 812:Generated_Source\PSoC4/Blinker.c ****     * Return:
 813:Generated_Source\PSoC4/Blinker.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC4/Blinker.c ****     *
 815:Generated_Source\PSoC4/Blinker.c ****     *******************************************************************************/
 816:Generated_Source\PSoC4/Blinker.c ****     uint16 Blinker_ReadCompare(void) 
 817:Generated_Source\PSoC4/Blinker.c ****     {
 818:Generated_Source\PSoC4/Blinker.c ****         #if(Blinker_UsingFixedFunction)
 819:Generated_Source\PSoC4/Blinker.c ****             return ((uint16)CY_GET_REG16(Blinker_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC4/Blinker.c ****         #else
 821:Generated_Source\PSoC4/Blinker.c ****             return (CY_GET_REG16(Blinker_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC4/Blinker.c ****         #endif /* (Blinker_UsingFixedFunction) */
 823:Generated_Source\PSoC4/Blinker.c ****     }
 824:Generated_Source\PSoC4/Blinker.c **** 
 825:Generated_Source\PSoC4/Blinker.c **** #else
 826:Generated_Source\PSoC4/Blinker.c **** 
 827:Generated_Source\PSoC4/Blinker.c **** 
 828:Generated_Source\PSoC4/Blinker.c ****     /*******************************************************************************
 829:Generated_Source\PSoC4/Blinker.c ****     * Function Name: Blinker_ReadCompare1
 830:Generated_Source\PSoC4/Blinker.c ****     ********************************************************************************
 831:Generated_Source\PSoC4/Blinker.c ****     *
 832:Generated_Source\PSoC4/Blinker.c ****     * Summary:
 833:Generated_Source\PSoC4/Blinker.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC4/Blinker.c ****     *
 835:Generated_Source\PSoC4/Blinker.c ****     * Parameters:
 836:Generated_Source\PSoC4/Blinker.c ****     *  None
 837:Generated_Source\PSoC4/Blinker.c ****     *
 838:Generated_Source\PSoC4/Blinker.c ****     * Return:
 839:Generated_Source\PSoC4/Blinker.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC4/Blinker.c ****     *
 841:Generated_Source\PSoC4/Blinker.c ****     *******************************************************************************/
 842:Generated_Source\PSoC4/Blinker.c ****     uint16 Blinker_ReadCompare1(void) 
 843:Generated_Source\PSoC4/Blinker.c ****     {
 533              		.loc 1 843 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 844:Generated_Source\PSoC4/Blinker.c ****         return (CY_GET_REG16(Blinker_COMPARE1_LSB_PTR));
 538              		.loc 1 844 0
 539 0000 014B     		ldr	r3, .L48
 540 0002 1888     		ldrh	r0, [r3]
 541 0004 80B2     		uxth	r0, r0
 845:Generated_Source\PSoC4/Blinker.c ****     }
 542              		.loc 1 845 0
 543              		@ sp needed
 544 0006 7047     		bx	lr
 545              	.L49:
 546              		.align	2
 547              	.L48:
 548 0008 44100F40 		.word	1074729028
 549              		.cfi_endproc
 550              	.LFE17:
 551              		.size	Blinker_ReadCompare1, .-Blinker_ReadCompare1
 552              		.section	.text.Blinker_ReadCompare2,"ax",%progbits
 553              		.align	2
 554              		.global	Blinker_ReadCompare2
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 26


 555              		.code	16
 556              		.thumb_func
 557              		.type	Blinker_ReadCompare2, %function
 558              	Blinker_ReadCompare2:
 559              	.LFB18:
 846:Generated_Source\PSoC4/Blinker.c **** 
 847:Generated_Source\PSoC4/Blinker.c **** 
 848:Generated_Source\PSoC4/Blinker.c ****     /*******************************************************************************
 849:Generated_Source\PSoC4/Blinker.c ****     * Function Name: Blinker_ReadCompare2
 850:Generated_Source\PSoC4/Blinker.c ****     ********************************************************************************
 851:Generated_Source\PSoC4/Blinker.c ****     *
 852:Generated_Source\PSoC4/Blinker.c ****     * Summary:
 853:Generated_Source\PSoC4/Blinker.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC4/Blinker.c ****     *
 855:Generated_Source\PSoC4/Blinker.c ****     * Parameters:
 856:Generated_Source\PSoC4/Blinker.c ****     *  None
 857:Generated_Source\PSoC4/Blinker.c ****     *
 858:Generated_Source\PSoC4/Blinker.c ****     * Return:
 859:Generated_Source\PSoC4/Blinker.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC4/Blinker.c ****     *
 861:Generated_Source\PSoC4/Blinker.c ****     *******************************************************************************/
 862:Generated_Source\PSoC4/Blinker.c ****     uint16 Blinker_ReadCompare2(void) 
 863:Generated_Source\PSoC4/Blinker.c ****     {
 560              		.loc 1 863 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564              		@ link register save eliminated.
 864:Generated_Source\PSoC4/Blinker.c ****         return (CY_GET_REG16(Blinker_COMPARE2_LSB_PTR));
 565              		.loc 1 864 0
 566 0000 014B     		ldr	r3, .L51
 567 0002 1888     		ldrh	r0, [r3]
 568 0004 80B2     		uxth	r0, r0
 865:Generated_Source\PSoC4/Blinker.c ****     }
 569              		.loc 1 865 0
 570              		@ sp needed
 571 0006 7047     		bx	lr
 572              	.L52:
 573              		.align	2
 574              	.L51:
 575 0008 64100F40 		.word	1074729060
 576              		.cfi_endproc
 577              	.LFE18:
 578              		.size	Blinker_ReadCompare2, .-Blinker_ReadCompare2
 579              		.section	.text.Blinker_ReadPeriod,"ax",%progbits
 580              		.align	2
 581              		.global	Blinker_ReadPeriod
 582              		.code	16
 583              		.thumb_func
 584              		.type	Blinker_ReadPeriod, %function
 585              	Blinker_ReadPeriod:
 586              	.LFB19:
 866:Generated_Source\PSoC4/Blinker.c **** 
 867:Generated_Source\PSoC4/Blinker.c **** #endif /* (Blinker_UseOneCompareMode) */
 868:Generated_Source\PSoC4/Blinker.c **** 
 869:Generated_Source\PSoC4/Blinker.c **** 
 870:Generated_Source\PSoC4/Blinker.c **** /*******************************************************************************
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 27


 871:Generated_Source\PSoC4/Blinker.c **** * Function Name: Blinker_ReadPeriod
 872:Generated_Source\PSoC4/Blinker.c **** ********************************************************************************
 873:Generated_Source\PSoC4/Blinker.c **** *
 874:Generated_Source\PSoC4/Blinker.c **** * Summary:
 875:Generated_Source\PSoC4/Blinker.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC4/Blinker.c **** *
 877:Generated_Source\PSoC4/Blinker.c **** * Parameters:
 878:Generated_Source\PSoC4/Blinker.c **** *  None
 879:Generated_Source\PSoC4/Blinker.c **** *
 880:Generated_Source\PSoC4/Blinker.c **** * Return:
 881:Generated_Source\PSoC4/Blinker.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC4/Blinker.c **** *
 883:Generated_Source\PSoC4/Blinker.c **** *******************************************************************************/
 884:Generated_Source\PSoC4/Blinker.c **** uint16 Blinker_ReadPeriod(void) 
 885:Generated_Source\PSoC4/Blinker.c **** {
 587              		.loc 1 885 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 886:Generated_Source\PSoC4/Blinker.c ****     #if(Blinker_UsingFixedFunction)
 887:Generated_Source\PSoC4/Blinker.c ****         return ((uint16)CY_GET_REG16(Blinker_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC4/Blinker.c ****     #else
 889:Generated_Source\PSoC4/Blinker.c ****         return (CY_GET_REG16(Blinker_PERIOD_LSB_PTR));
 592              		.loc 1 889 0
 593 0000 014B     		ldr	r3, .L54
 594 0002 1888     		ldrh	r0, [r3]
 595 0004 80B2     		uxth	r0, r0
 890:Generated_Source\PSoC4/Blinker.c ****     #endif /* (Blinker_UsingFixedFunction) */
 891:Generated_Source\PSoC4/Blinker.c **** }
 596              		.loc 1 891 0
 597              		@ sp needed
 598 0006 7047     		bx	lr
 599              	.L55:
 600              		.align	2
 601              	.L54:
 602 0008 84100F40 		.word	1074729092
 603              		.cfi_endproc
 604              	.LFE19:
 605              		.size	Blinker_ReadPeriod, .-Blinker_ReadPeriod
 606              		.global	Blinker_initVar
 607              		.bss
 608              		.set	.LANCHOR0,. + 0
 609              		.type	Blinker_initVar, %object
 610              		.size	Blinker_initVar, 1
 611              	Blinker_initVar:
 612 0000 00       		.space	1
 613              		.text
 614              	.Letext0:
 615              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 616              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 617              		.section	.debug_info,"",%progbits
 618              	.Ldebug_info0:
 619 0000 9C030000 		.4byte	0x39c
 620 0004 0400     		.2byte	0x4
 621 0006 00000000 		.4byte	.Ldebug_abbrev0
 622 000a 04       		.byte	0x4
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 28


 623 000b 01       		.uleb128 0x1
 624 000c 0E020000 		.4byte	.LASF45
 625 0010 0C       		.byte	0xc
 626 0011 16030000 		.4byte	.LASF46
 627 0015 A1020000 		.4byte	.LASF47
 628 0019 00000000 		.4byte	.Ldebug_ranges0+0
 629 001d 00000000 		.4byte	0
 630 0021 00000000 		.4byte	.Ldebug_line0
 631 0025 02       		.uleb128 0x2
 632 0026 01       		.byte	0x1
 633 0027 06       		.byte	0x6
 634 0028 68030000 		.4byte	.LASF0
 635 002c 02       		.uleb128 0x2
 636 002d 01       		.byte	0x1
 637 002e 08       		.byte	0x8
 638 002f CB000000 		.4byte	.LASF1
 639 0033 02       		.uleb128 0x2
 640 0034 02       		.byte	0x2
 641 0035 05       		.byte	0x5
 642 0036 0C030000 		.4byte	.LASF2
 643 003a 02       		.uleb128 0x2
 644 003b 02       		.byte	0x2
 645 003c 07       		.byte	0x7
 646 003d 6A000000 		.4byte	.LASF3
 647 0041 02       		.uleb128 0x2
 648 0042 04       		.byte	0x4
 649 0043 05       		.byte	0x5
 650 0044 4E030000 		.4byte	.LASF4
 651 0048 02       		.uleb128 0x2
 652 0049 04       		.byte	0x4
 653 004a 07       		.byte	0x7
 654 004b EB000000 		.4byte	.LASF5
 655 004f 02       		.uleb128 0x2
 656 0050 08       		.byte	0x8
 657 0051 05       		.byte	0x5
 658 0052 DE020000 		.4byte	.LASF6
 659 0056 02       		.uleb128 0x2
 660 0057 08       		.byte	0x8
 661 0058 07       		.byte	0x7
 662 0059 8C030000 		.4byte	.LASF7
 663 005d 03       		.uleb128 0x3
 664 005e 04       		.byte	0x4
 665 005f 05       		.byte	0x5
 666 0060 696E7400 		.ascii	"int\000"
 667 0064 02       		.uleb128 0x2
 668 0065 04       		.byte	0x4
 669 0066 07       		.byte	0x7
 670 0067 BA010000 		.4byte	.LASF8
 671 006b 04       		.uleb128 0x4
 672 006c 19010000 		.4byte	.LASF9
 673 0070 02       		.byte	0x2
 674 0071 B901     		.2byte	0x1b9
 675 0073 2C000000 		.4byte	0x2c
 676 0077 04       		.uleb128 0x4
 677 0078 64010000 		.4byte	.LASF10
 678 007c 02       		.byte	0x2
 679 007d BA01     		.2byte	0x1ba
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 29


 680 007f 3A000000 		.4byte	0x3a
 681 0083 02       		.uleb128 0x2
 682 0084 04       		.byte	0x4
 683 0085 04       		.byte	0x4
 684 0086 AE000000 		.4byte	.LASF11
 685 008a 02       		.uleb128 0x2
 686 008b 08       		.byte	0x8
 687 008c 04       		.byte	0x4
 688 008d 49010000 		.4byte	.LASF12
 689 0091 02       		.uleb128 0x2
 690 0092 01       		.byte	0x1
 691 0093 08       		.byte	0x8
 692 0094 57030000 		.4byte	.LASF13
 693 0098 04       		.uleb128 0x4
 694 0099 D9000000 		.4byte	.LASF14
 695 009d 02       		.byte	0x2
 696 009e 6302     		.2byte	0x263
 697 00a0 A4000000 		.4byte	0xa4
 698 00a4 05       		.uleb128 0x5
 699 00a5 6B000000 		.4byte	0x6b
 700 00a9 04       		.uleb128 0x4
 701 00aa 00000000 		.4byte	.LASF15
 702 00ae 02       		.byte	0x2
 703 00af 6402     		.2byte	0x264
 704 00b1 B5000000 		.4byte	0xb5
 705 00b5 05       		.uleb128 0x5
 706 00b6 77000000 		.4byte	0x77
 707 00ba 02       		.uleb128 0x2
 708 00bb 08       		.byte	0x8
 709 00bc 04       		.byte	0x4
 710 00bd 5C030000 		.4byte	.LASF16
 711 00c1 02       		.uleb128 0x2
 712 00c2 04       		.byte	0x4
 713 00c3 07       		.byte	0x7
 714 00c4 D5020000 		.4byte	.LASF17
 715 00c8 06       		.uleb128 0x6
 716 00c9 BC000000 		.4byte	.LASF18
 717 00cd 01       		.byte	0x1
 718 00ce C7       		.byte	0xc7
 719 00cf 00000000 		.4byte	.LFB4
 720 00d3 14000000 		.4byte	.LFE4-.LFB4
 721 00d7 01       		.uleb128 0x1
 722 00d8 9C       		.byte	0x9c
 723 00d9 06       		.uleb128 0x6
 724 00da DE000000 		.4byte	.LASF19
 725 00de 01       		.byte	0x1
 726 00df E9       		.byte	0xe9
 727 00e0 00000000 		.4byte	.LFB5
 728 00e4 10000000 		.4byte	.LFE5-.LFB5
 729 00e8 01       		.uleb128 0x1
 730 00e9 9C       		.byte	0x9c
 731 00ea 07       		.uleb128 0x7
 732 00eb 34010000 		.4byte	.LASF20
 733 00ef 01       		.byte	0x1
 734 00f0 9301     		.2byte	0x193
 735 00f2 00000000 		.4byte	.LFB6
 736 00f6 0C000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 30


 737 00fa 01       		.uleb128 0x1
 738 00fb 9C       		.byte	0x9c
 739 00fc 0F010000 		.4byte	0x10f
 740 0100 08       		.uleb128 0x8
 741 0101 B4000000 		.4byte	.LASF22
 742 0105 01       		.byte	0x1
 743 0106 9301     		.2byte	0x193
 744 0108 77000000 		.4byte	0x77
 745 010c 01       		.uleb128 0x1
 746 010d 50       		.byte	0x50
 747 010e 00       		.byte	0
 748 010f 09       		.uleb128 0x9
 749 0110 C7010000 		.4byte	.LASF29
 750 0114 01       		.byte	0x1
 751 0115 A901     		.2byte	0x1a9
 752 0117 77000000 		.4byte	0x77
 753 011b 00000000 		.4byte	.LFB7
 754 011f 14000000 		.4byte	.LFE7-.LFB7
 755 0123 01       		.uleb128 0x1
 756 0124 9C       		.byte	0x9c
 757 0125 07       		.uleb128 0x7
 758 0126 50010000 		.4byte	.LASF21
 759 012a 01       		.byte	0x1
 760 012b E201     		.2byte	0x1e2
 761 012d 00000000 		.4byte	.LFB9
 762 0131 0C000000 		.4byte	.LFE9-.LFB9
 763 0135 01       		.uleb128 0x1
 764 0136 9C       		.byte	0x9c
 765 0137 4A010000 		.4byte	0x14a
 766 013b 08       		.uleb128 0x8
 767 013c 4A000000 		.4byte	.LASF23
 768 0140 01       		.byte	0x1
 769 0141 E201     		.2byte	0x1e2
 770 0143 77000000 		.4byte	0x77
 771 0147 01       		.uleb128 0x1
 772 0148 50       		.byte	0x50
 773 0149 00       		.byte	0
 774 014a 07       		.uleb128 0x7
 775 014b 1A000000 		.4byte	.LASF24
 776 014f 01       		.byte	0x1
 777 0150 2B02     		.2byte	0x22b
 778 0152 00000000 		.4byte	.LFB10
 779 0156 0C000000 		.4byte	.LFE10-.LFB10
 780 015a 01       		.uleb128 0x1
 781 015b 9C       		.byte	0x9c
 782 015c 6F010000 		.4byte	0x16f
 783 0160 08       		.uleb128 0x8
 784 0161 74030000 		.4byte	.LASF25
 785 0165 01       		.byte	0x1
 786 0166 2B02     		.2byte	0x22b
 787 0168 77000000 		.4byte	0x77
 788 016c 01       		.uleb128 0x1
 789 016d 50       		.byte	0x50
 790 016e 00       		.byte	0
 791 016f 07       		.uleb128 0x7
 792 0170 7D000000 		.4byte	.LASF26
 793 0174 01       		.byte	0x1
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 31


 794 0175 4802     		.2byte	0x248
 795 0177 00000000 		.4byte	.LFB11
 796 017b 0C000000 		.4byte	.LFE11-.LFB11
 797 017f 01       		.uleb128 0x1
 798 0180 9C       		.byte	0x9c
 799 0181 94010000 		.4byte	0x194
 800 0185 08       		.uleb128 0x8
 801 0186 74030000 		.4byte	.LASF25
 802 018a 01       		.byte	0x1
 803 018b 4802     		.2byte	0x248
 804 018d 77000000 		.4byte	0x77
 805 0191 01       		.uleb128 0x1
 806 0192 50       		.byte	0x50
 807 0193 00       		.byte	0
 808 0194 07       		.uleb128 0x7
 809 0195 51000000 		.4byte	.LASF27
 810 0199 01       		.byte	0x1
 811 019a AC02     		.2byte	0x2ac
 812 019c 00000000 		.4byte	.LFB12
 813 01a0 0C000000 		.4byte	.LFE12-.LFB12
 814 01a4 01       		.uleb128 0x1
 815 01a5 9C       		.byte	0x9c
 816 01a6 B9010000 		.4byte	0x1b9
 817 01aa 08       		.uleb128 0x8
 818 01ab FE020000 		.4byte	.LASF28
 819 01af 01       		.byte	0x1
 820 01b0 AC02     		.2byte	0x2ac
 821 01b2 6B000000 		.4byte	0x6b
 822 01b6 01       		.uleb128 0x1
 823 01b7 50       		.byte	0x50
 824 01b8 00       		.byte	0
 825 01b9 09       		.uleb128 0x9
 826 01ba 93000000 		.4byte	.LASF30
 827 01be 01       		.byte	0x1
 828 01bf C702     		.2byte	0x2c7
 829 01c1 6B000000 		.4byte	0x6b
 830 01c5 00000000 		.4byte	.LFB13
 831 01c9 0C000000 		.4byte	.LFE13-.LFB13
 832 01cd 01       		.uleb128 0x1
 833 01ce 9C       		.byte	0x9c
 834 01cf 0A       		.uleb128 0xa
 835 01d0 FD000000 		.4byte	.LASF48
 836 01d4 01       		.byte	0x1
 837 01d5 E102     		.2byte	0x2e1
 838 01d7 6B000000 		.4byte	0x6b
 839 01db 00000000 		.4byte	.LFB14
 840 01df 0C000000 		.4byte	.LFE14-.LFB14
 841 01e3 01       		.uleb128 0x1
 842 01e4 9C       		.byte	0x9c
 843 01e5 F8010000 		.4byte	0x1f8
 844 01e9 0B       		.uleb128 0xb
 845 01ea 43000000 		.4byte	.LASF36
 846 01ee 01       		.byte	0x1
 847 01ef E302     		.2byte	0x2e3
 848 01f1 6B000000 		.4byte	0x6b
 849 01f5 01       		.uleb128 0x1
 850 01f6 50       		.byte	0x50
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 32


 851 01f7 00       		.byte	0
 852 01f8 07       		.uleb128 0x7
 853 01f9 F1010000 		.4byte	.LASF31
 854 01fd 01       		.byte	0x1
 855 01fe FD02     		.2byte	0x2fd
 856 0200 00000000 		.4byte	.LFB15
 857 0204 0C000000 		.4byte	.LFE15-.LFB15
 858 0208 01       		.uleb128 0x1
 859 0209 9C       		.byte	0x9c
 860 020a 1D020000 		.4byte	0x21d
 861 020e 08       		.uleb128 0x8
 862 020f 1F010000 		.4byte	.LASF32
 863 0213 01       		.byte	0x1
 864 0214 FD02     		.2byte	0x2fd
 865 0216 6B000000 		.4byte	0x6b
 866 021a 01       		.uleb128 0x1
 867 021b 50       		.byte	0x50
 868 021c 00       		.byte	0
 869 021d 09       		.uleb128 0x9
 870 021e 06000000 		.4byte	.LASF33
 871 0222 01       		.byte	0x1
 872 0223 1603     		.2byte	0x316
 873 0225 77000000 		.4byte	0x77
 874 0229 00000000 		.4byte	.LFB16
 875 022d 0C000000 		.4byte	.LFE16-.LFB16
 876 0231 01       		.uleb128 0x1
 877 0232 9C       		.byte	0x9c
 878 0233 07       		.uleb128 0x7
 879 0234 EC020000 		.4byte	.LASF34
 880 0238 01       		.byte	0x1
 881 0239 C501     		.2byte	0x1c5
 882 023b 00000000 		.4byte	.LFB8
 883 023f 12000000 		.4byte	.LFE8-.LFB8
 884 0243 01       		.uleb128 0x1
 885 0244 9C       		.byte	0x9c
 886 0245 5C020000 		.4byte	0x25c
 887 0249 0C       		.uleb128 0xc
 888 024a 08000000 		.4byte	.LVL7
 889 024e 1D020000 		.4byte	0x21d
 890 0252 0C       		.uleb128 0xc
 891 0253 0C000000 		.4byte	.LVL8
 892 0257 B9010000 		.4byte	0x1b9
 893 025b 00       		.byte	0
 894 025c 0D       		.uleb128 0xd
 895 025d 27010000 		.4byte	.LASF35
 896 0261 01       		.byte	0x1
 897 0262 54       		.byte	0x54
 898 0263 00000000 		.4byte	.LFB3
 899 0267 78000000 		.4byte	.LFE3-.LFB3
 900 026b 01       		.uleb128 0x1
 901 026c 9C       		.byte	0x9c
 902 026d 0E030000 		.4byte	0x30e
 903 0271 0E       		.uleb128 0xe
 904 0272 9C020000 		.4byte	.LASF37
 905 0276 01       		.byte	0x1
 906 0277 57       		.byte	0x57
 907 0278 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 33


 908 027c 00000000 		.4byte	.LLST0
 909 0280 0E       		.uleb128 0xe
 910 0281 37030000 		.4byte	.LASF38
 911 0285 01       		.byte	0x1
 912 0286 5D       		.byte	0x5d
 913 0287 6B000000 		.4byte	0x6b
 914 028b 13000000 		.4byte	.LLST1
 915 028f 0F       		.uleb128 0xf
 916 0290 30000000 		.4byte	.LVL11
 917 0294 EA000000 		.4byte	0xea
 918 0298 A3020000 		.4byte	0x2a3
 919 029c 10       		.uleb128 0x10
 920 029d 01       		.uleb128 0x1
 921 029e 50       		.byte	0x50
 922 029f 02       		.uleb128 0x2
 923 02a0 75       		.byte	0x75
 924 02a1 00       		.sleb128 0
 925 02a2 00       		.byte	0
 926 02a3 0F       		.uleb128 0xf
 927 02a4 36000000 		.4byte	.LVL12
 928 02a8 25010000 		.4byte	0x125
 929 02ac B7020000 		.4byte	0x2b7
 930 02b0 10       		.uleb128 0x10
 931 02b1 01       		.uleb128 0x1
 932 02b2 50       		.byte	0x50
 933 02b3 02       		.uleb128 0x2
 934 02b4 75       		.byte	0x75
 935 02b5 00       		.sleb128 0
 936 02b6 00       		.byte	0
 937 02b7 0F       		.uleb128 0xf
 938 02b8 3E000000 		.4byte	.LVL13
 939 02bc 4A010000 		.4byte	0x14a
 940 02c0 CB020000 		.4byte	0x2cb
 941 02c4 10       		.uleb128 0x10
 942 02c5 01       		.uleb128 0x1
 943 02c6 50       		.byte	0x50
 944 02c7 02       		.uleb128 0x2
 945 02c8 75       		.byte	0x75
 946 02c9 00       		.sleb128 0
 947 02ca 00       		.byte	0
 948 02cb 0F       		.uleb128 0xf
 949 02cc 44000000 		.4byte	.LVL14
 950 02d0 6F010000 		.4byte	0x16f
 951 02d4 DF020000 		.4byte	0x2df
 952 02d8 10       		.uleb128 0x10
 953 02d9 01       		.uleb128 0x1
 954 02da 50       		.byte	0x50
 955 02db 02       		.uleb128 0x2
 956 02dc 75       		.byte	0x75
 957 02dd 00       		.sleb128 0
 958 02de 00       		.byte	0
 959 02df 0F       		.uleb128 0xf
 960 02e0 4A000000 		.4byte	.LVL15
 961 02e4 94010000 		.4byte	0x194
 962 02e8 F2020000 		.4byte	0x2f2
 963 02ec 10       		.uleb128 0x10
 964 02ed 01       		.uleb128 0x1
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 34


 965 02ee 50       		.byte	0x50
 966 02ef 01       		.uleb128 0x1
 967 02f0 30       		.byte	0x30
 968 02f1 00       		.byte	0
 969 02f2 0C       		.uleb128 0xc
 970 02f3 4E000000 		.4byte	.LVL16
 971 02f7 89030000 		.4byte	0x389
 972 02fb 0C       		.uleb128 0xc
 973 02fc 5C000000 		.4byte	.LVL17
 974 0300 94030000 		.4byte	0x394
 975 0304 0C       		.uleb128 0xc
 976 0305 60000000 		.4byte	.LVL18
 977 0309 33020000 		.4byte	0x233
 978 030d 00       		.byte	0
 979 030e 0D       		.uleb128 0xd
 980 030f 95010000 		.4byte	.LASF39
 981 0313 01       		.byte	0x1
 982 0314 37       		.byte	0x37
 983 0315 00000000 		.4byte	.LFB2
 984 0319 20000000 		.4byte	.LFE2-.LFB2
 985 031d 01       		.uleb128 0x1
 986 031e 9C       		.byte	0x9c
 987 031f 36030000 		.4byte	0x336
 988 0323 0C       		.uleb128 0xc
 989 0324 0E000000 		.4byte	.LVL19
 990 0328 5C020000 		.4byte	0x25c
 991 032c 0C       		.uleb128 0xc
 992 032d 18000000 		.4byte	.LVL20
 993 0331 C8000000 		.4byte	0xc8
 994 0335 00       		.byte	0
 995 0336 09       		.uleb128 0x9
 996 0337 6B010000 		.4byte	.LASF40
 997 033b 01       		.byte	0x1
 998 033c 4A03     		.2byte	0x34a
 999 033e 77000000 		.4byte	0x77
 1000 0342 00000000 		.4byte	.LFB17
 1001 0346 0C000000 		.4byte	.LFE17-.LFB17
 1002 034a 01       		.uleb128 0x1
 1003 034b 9C       		.byte	0x9c
 1004 034c 09       		.uleb128 0x9
 1005 034d 80010000 		.4byte	.LASF41
 1006 0351 01       		.byte	0x1
 1007 0352 5E03     		.2byte	0x35e
 1008 0354 77000000 		.4byte	0x77
 1009 0358 00000000 		.4byte	.LFB18
 1010 035c 0C000000 		.4byte	.LFE18-.LFB18
 1011 0360 01       		.uleb128 0x1
 1012 0361 9C       		.byte	0x9c
 1013 0362 09       		.uleb128 0x9
 1014 0363 30000000 		.4byte	.LASF42
 1015 0367 01       		.byte	0x1
 1016 0368 7403     		.2byte	0x374
 1017 036a 77000000 		.4byte	0x77
 1018 036e 00000000 		.4byte	.LFB19
 1019 0372 0C000000 		.4byte	.LFE19-.LFB19
 1020 0376 01       		.uleb128 0x1
 1021 0377 9C       		.byte	0x9c
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 35


 1022 0378 11       		.uleb128 0x11
 1023 0379 7C030000 		.4byte	.LASF49
 1024 037d 01       		.byte	0x1
 1025 037e 20       		.byte	0x20
 1026 037f 6B000000 		.4byte	0x6b
 1027 0383 05       		.uleb128 0x5
 1028 0384 03       		.byte	0x3
 1029 0385 00000000 		.4byte	Blinker_initVar
 1030 0389 12       		.uleb128 0x12
 1031 038a A3010000 		.4byte	.LASF43
 1032 038e A3010000 		.4byte	.LASF43
 1033 0392 03       		.byte	0x3
 1034 0393 E5       		.byte	0xe5
 1035 0394 12       		.uleb128 0x12
 1036 0395 DB010000 		.4byte	.LASF44
 1037 0399 DB010000 		.4byte	.LASF44
 1038 039d 03       		.byte	0x3
 1039 039e E6       		.byte	0xe6
 1040 039f 00       		.byte	0
 1041              		.section	.debug_abbrev,"",%progbits
 1042              	.Ldebug_abbrev0:
 1043 0000 01       		.uleb128 0x1
 1044 0001 11       		.uleb128 0x11
 1045 0002 01       		.byte	0x1
 1046 0003 25       		.uleb128 0x25
 1047 0004 0E       		.uleb128 0xe
 1048 0005 13       		.uleb128 0x13
 1049 0006 0B       		.uleb128 0xb
 1050 0007 03       		.uleb128 0x3
 1051 0008 0E       		.uleb128 0xe
 1052 0009 1B       		.uleb128 0x1b
 1053 000a 0E       		.uleb128 0xe
 1054 000b 55       		.uleb128 0x55
 1055 000c 17       		.uleb128 0x17
 1056 000d 11       		.uleb128 0x11
 1057 000e 01       		.uleb128 0x1
 1058 000f 10       		.uleb128 0x10
 1059 0010 17       		.uleb128 0x17
 1060 0011 00       		.byte	0
 1061 0012 00       		.byte	0
 1062 0013 02       		.uleb128 0x2
 1063 0014 24       		.uleb128 0x24
 1064 0015 00       		.byte	0
 1065 0016 0B       		.uleb128 0xb
 1066 0017 0B       		.uleb128 0xb
 1067 0018 3E       		.uleb128 0x3e
 1068 0019 0B       		.uleb128 0xb
 1069 001a 03       		.uleb128 0x3
 1070 001b 0E       		.uleb128 0xe
 1071 001c 00       		.byte	0
 1072 001d 00       		.byte	0
 1073 001e 03       		.uleb128 0x3
 1074 001f 24       		.uleb128 0x24
 1075 0020 00       		.byte	0
 1076 0021 0B       		.uleb128 0xb
 1077 0022 0B       		.uleb128 0xb
 1078 0023 3E       		.uleb128 0x3e
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 36


 1079 0024 0B       		.uleb128 0xb
 1080 0025 03       		.uleb128 0x3
 1081 0026 08       		.uleb128 0x8
 1082 0027 00       		.byte	0
 1083 0028 00       		.byte	0
 1084 0029 04       		.uleb128 0x4
 1085 002a 16       		.uleb128 0x16
 1086 002b 00       		.byte	0
 1087 002c 03       		.uleb128 0x3
 1088 002d 0E       		.uleb128 0xe
 1089 002e 3A       		.uleb128 0x3a
 1090 002f 0B       		.uleb128 0xb
 1091 0030 3B       		.uleb128 0x3b
 1092 0031 05       		.uleb128 0x5
 1093 0032 49       		.uleb128 0x49
 1094 0033 13       		.uleb128 0x13
 1095 0034 00       		.byte	0
 1096 0035 00       		.byte	0
 1097 0036 05       		.uleb128 0x5
 1098 0037 35       		.uleb128 0x35
 1099 0038 00       		.byte	0
 1100 0039 49       		.uleb128 0x49
 1101 003a 13       		.uleb128 0x13
 1102 003b 00       		.byte	0
 1103 003c 00       		.byte	0
 1104 003d 06       		.uleb128 0x6
 1105 003e 2E       		.uleb128 0x2e
 1106 003f 00       		.byte	0
 1107 0040 3F       		.uleb128 0x3f
 1108 0041 19       		.uleb128 0x19
 1109 0042 03       		.uleb128 0x3
 1110 0043 0E       		.uleb128 0xe
 1111 0044 3A       		.uleb128 0x3a
 1112 0045 0B       		.uleb128 0xb
 1113 0046 3B       		.uleb128 0x3b
 1114 0047 0B       		.uleb128 0xb
 1115 0048 27       		.uleb128 0x27
 1116 0049 19       		.uleb128 0x19
 1117 004a 11       		.uleb128 0x11
 1118 004b 01       		.uleb128 0x1
 1119 004c 12       		.uleb128 0x12
 1120 004d 06       		.uleb128 0x6
 1121 004e 40       		.uleb128 0x40
 1122 004f 18       		.uleb128 0x18
 1123 0050 9742     		.uleb128 0x2117
 1124 0052 19       		.uleb128 0x19
 1125 0053 00       		.byte	0
 1126 0054 00       		.byte	0
 1127 0055 07       		.uleb128 0x7
 1128 0056 2E       		.uleb128 0x2e
 1129 0057 01       		.byte	0x1
 1130 0058 3F       		.uleb128 0x3f
 1131 0059 19       		.uleb128 0x19
 1132 005a 03       		.uleb128 0x3
 1133 005b 0E       		.uleb128 0xe
 1134 005c 3A       		.uleb128 0x3a
 1135 005d 0B       		.uleb128 0xb
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 37


 1136 005e 3B       		.uleb128 0x3b
 1137 005f 05       		.uleb128 0x5
 1138 0060 27       		.uleb128 0x27
 1139 0061 19       		.uleb128 0x19
 1140 0062 11       		.uleb128 0x11
 1141 0063 01       		.uleb128 0x1
 1142 0064 12       		.uleb128 0x12
 1143 0065 06       		.uleb128 0x6
 1144 0066 40       		.uleb128 0x40
 1145 0067 18       		.uleb128 0x18
 1146 0068 9742     		.uleb128 0x2117
 1147 006a 19       		.uleb128 0x19
 1148 006b 01       		.uleb128 0x1
 1149 006c 13       		.uleb128 0x13
 1150 006d 00       		.byte	0
 1151 006e 00       		.byte	0
 1152 006f 08       		.uleb128 0x8
 1153 0070 05       		.uleb128 0x5
 1154 0071 00       		.byte	0
 1155 0072 03       		.uleb128 0x3
 1156 0073 0E       		.uleb128 0xe
 1157 0074 3A       		.uleb128 0x3a
 1158 0075 0B       		.uleb128 0xb
 1159 0076 3B       		.uleb128 0x3b
 1160 0077 05       		.uleb128 0x5
 1161 0078 49       		.uleb128 0x49
 1162 0079 13       		.uleb128 0x13
 1163 007a 02       		.uleb128 0x2
 1164 007b 18       		.uleb128 0x18
 1165 007c 00       		.byte	0
 1166 007d 00       		.byte	0
 1167 007e 09       		.uleb128 0x9
 1168 007f 2E       		.uleb128 0x2e
 1169 0080 00       		.byte	0
 1170 0081 3F       		.uleb128 0x3f
 1171 0082 19       		.uleb128 0x19
 1172 0083 03       		.uleb128 0x3
 1173 0084 0E       		.uleb128 0xe
 1174 0085 3A       		.uleb128 0x3a
 1175 0086 0B       		.uleb128 0xb
 1176 0087 3B       		.uleb128 0x3b
 1177 0088 05       		.uleb128 0x5
 1178 0089 27       		.uleb128 0x27
 1179 008a 19       		.uleb128 0x19
 1180 008b 49       		.uleb128 0x49
 1181 008c 13       		.uleb128 0x13
 1182 008d 11       		.uleb128 0x11
 1183 008e 01       		.uleb128 0x1
 1184 008f 12       		.uleb128 0x12
 1185 0090 06       		.uleb128 0x6
 1186 0091 40       		.uleb128 0x40
 1187 0092 18       		.uleb128 0x18
 1188 0093 9742     		.uleb128 0x2117
 1189 0095 19       		.uleb128 0x19
 1190 0096 00       		.byte	0
 1191 0097 00       		.byte	0
 1192 0098 0A       		.uleb128 0xa
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 38


 1193 0099 2E       		.uleb128 0x2e
 1194 009a 01       		.byte	0x1
 1195 009b 3F       		.uleb128 0x3f
 1196 009c 19       		.uleb128 0x19
 1197 009d 03       		.uleb128 0x3
 1198 009e 0E       		.uleb128 0xe
 1199 009f 3A       		.uleb128 0x3a
 1200 00a0 0B       		.uleb128 0xb
 1201 00a1 3B       		.uleb128 0x3b
 1202 00a2 05       		.uleb128 0x5
 1203 00a3 27       		.uleb128 0x27
 1204 00a4 19       		.uleb128 0x19
 1205 00a5 49       		.uleb128 0x49
 1206 00a6 13       		.uleb128 0x13
 1207 00a7 11       		.uleb128 0x11
 1208 00a8 01       		.uleb128 0x1
 1209 00a9 12       		.uleb128 0x12
 1210 00aa 06       		.uleb128 0x6
 1211 00ab 40       		.uleb128 0x40
 1212 00ac 18       		.uleb128 0x18
 1213 00ad 9742     		.uleb128 0x2117
 1214 00af 19       		.uleb128 0x19
 1215 00b0 01       		.uleb128 0x1
 1216 00b1 13       		.uleb128 0x13
 1217 00b2 00       		.byte	0
 1218 00b3 00       		.byte	0
 1219 00b4 0B       		.uleb128 0xb
 1220 00b5 34       		.uleb128 0x34
 1221 00b6 00       		.byte	0
 1222 00b7 03       		.uleb128 0x3
 1223 00b8 0E       		.uleb128 0xe
 1224 00b9 3A       		.uleb128 0x3a
 1225 00ba 0B       		.uleb128 0xb
 1226 00bb 3B       		.uleb128 0x3b
 1227 00bc 05       		.uleb128 0x5
 1228 00bd 49       		.uleb128 0x49
 1229 00be 13       		.uleb128 0x13
 1230 00bf 02       		.uleb128 0x2
 1231 00c0 18       		.uleb128 0x18
 1232 00c1 00       		.byte	0
 1233 00c2 00       		.byte	0
 1234 00c3 0C       		.uleb128 0xc
 1235 00c4 898201   		.uleb128 0x4109
 1236 00c7 00       		.byte	0
 1237 00c8 11       		.uleb128 0x11
 1238 00c9 01       		.uleb128 0x1
 1239 00ca 31       		.uleb128 0x31
 1240 00cb 13       		.uleb128 0x13
 1241 00cc 00       		.byte	0
 1242 00cd 00       		.byte	0
 1243 00ce 0D       		.uleb128 0xd
 1244 00cf 2E       		.uleb128 0x2e
 1245 00d0 01       		.byte	0x1
 1246 00d1 3F       		.uleb128 0x3f
 1247 00d2 19       		.uleb128 0x19
 1248 00d3 03       		.uleb128 0x3
 1249 00d4 0E       		.uleb128 0xe
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 39


 1250 00d5 3A       		.uleb128 0x3a
 1251 00d6 0B       		.uleb128 0xb
 1252 00d7 3B       		.uleb128 0x3b
 1253 00d8 0B       		.uleb128 0xb
 1254 00d9 27       		.uleb128 0x27
 1255 00da 19       		.uleb128 0x19
 1256 00db 11       		.uleb128 0x11
 1257 00dc 01       		.uleb128 0x1
 1258 00dd 12       		.uleb128 0x12
 1259 00de 06       		.uleb128 0x6
 1260 00df 40       		.uleb128 0x40
 1261 00e0 18       		.uleb128 0x18
 1262 00e1 9742     		.uleb128 0x2117
 1263 00e3 19       		.uleb128 0x19
 1264 00e4 01       		.uleb128 0x1
 1265 00e5 13       		.uleb128 0x13
 1266 00e6 00       		.byte	0
 1267 00e7 00       		.byte	0
 1268 00e8 0E       		.uleb128 0xe
 1269 00e9 34       		.uleb128 0x34
 1270 00ea 00       		.byte	0
 1271 00eb 03       		.uleb128 0x3
 1272 00ec 0E       		.uleb128 0xe
 1273 00ed 3A       		.uleb128 0x3a
 1274 00ee 0B       		.uleb128 0xb
 1275 00ef 3B       		.uleb128 0x3b
 1276 00f0 0B       		.uleb128 0xb
 1277 00f1 49       		.uleb128 0x49
 1278 00f2 13       		.uleb128 0x13
 1279 00f3 02       		.uleb128 0x2
 1280 00f4 17       		.uleb128 0x17
 1281 00f5 00       		.byte	0
 1282 00f6 00       		.byte	0
 1283 00f7 0F       		.uleb128 0xf
 1284 00f8 898201   		.uleb128 0x4109
 1285 00fb 01       		.byte	0x1
 1286 00fc 11       		.uleb128 0x11
 1287 00fd 01       		.uleb128 0x1
 1288 00fe 31       		.uleb128 0x31
 1289 00ff 13       		.uleb128 0x13
 1290 0100 01       		.uleb128 0x1
 1291 0101 13       		.uleb128 0x13
 1292 0102 00       		.byte	0
 1293 0103 00       		.byte	0
 1294 0104 10       		.uleb128 0x10
 1295 0105 8A8201   		.uleb128 0x410a
 1296 0108 00       		.byte	0
 1297 0109 02       		.uleb128 0x2
 1298 010a 18       		.uleb128 0x18
 1299 010b 9142     		.uleb128 0x2111
 1300 010d 18       		.uleb128 0x18
 1301 010e 00       		.byte	0
 1302 010f 00       		.byte	0
 1303 0110 11       		.uleb128 0x11
 1304 0111 34       		.uleb128 0x34
 1305 0112 00       		.byte	0
 1306 0113 03       		.uleb128 0x3
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 40


 1307 0114 0E       		.uleb128 0xe
 1308 0115 3A       		.uleb128 0x3a
 1309 0116 0B       		.uleb128 0xb
 1310 0117 3B       		.uleb128 0x3b
 1311 0118 0B       		.uleb128 0xb
 1312 0119 49       		.uleb128 0x49
 1313 011a 13       		.uleb128 0x13
 1314 011b 3F       		.uleb128 0x3f
 1315 011c 19       		.uleb128 0x19
 1316 011d 02       		.uleb128 0x2
 1317 011e 18       		.uleb128 0x18
 1318 011f 00       		.byte	0
 1319 0120 00       		.byte	0
 1320 0121 12       		.uleb128 0x12
 1321 0122 2E       		.uleb128 0x2e
 1322 0123 00       		.byte	0
 1323 0124 3F       		.uleb128 0x3f
 1324 0125 19       		.uleb128 0x19
 1325 0126 3C       		.uleb128 0x3c
 1326 0127 19       		.uleb128 0x19
 1327 0128 6E       		.uleb128 0x6e
 1328 0129 0E       		.uleb128 0xe
 1329 012a 03       		.uleb128 0x3
 1330 012b 0E       		.uleb128 0xe
 1331 012c 3A       		.uleb128 0x3a
 1332 012d 0B       		.uleb128 0xb
 1333 012e 3B       		.uleb128 0x3b
 1334 012f 0B       		.uleb128 0xb
 1335 0130 00       		.byte	0
 1336 0131 00       		.byte	0
 1337 0132 00       		.byte	0
 1338              		.section	.debug_loc,"",%progbits
 1339              	.Ldebug_loc0:
 1340              	.LLST0:
 1341 0000 0A000000 		.4byte	.LVL9
 1342 0004 0E000000 		.4byte	.LVL10
 1343 0008 0100     		.2byte	0x1
 1344 000a 53       		.byte	0x53
 1345 000b 00000000 		.4byte	0
 1346 000f 00000000 		.4byte	0
 1347              	.LLST1:
 1348 0013 4E000000 		.4byte	.LVL16
 1349 0017 5B000000 		.4byte	.LVL17-1
 1350 001b 0100     		.2byte	0x1
 1351 001d 50       		.byte	0x50
 1352 001e 00000000 		.4byte	0
 1353 0022 00000000 		.4byte	0
 1354              		.section	.debug_aranges,"",%progbits
 1355 0000 A4000000 		.4byte	0xa4
 1356 0004 0200     		.2byte	0x2
 1357 0006 00000000 		.4byte	.Ldebug_info0
 1358 000a 04       		.byte	0x4
 1359 000b 00       		.byte	0
 1360 000c 0000     		.2byte	0
 1361 000e 0000     		.2byte	0
 1362 0010 00000000 		.4byte	.LFB4
 1363 0014 14000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 41


 1364 0018 00000000 		.4byte	.LFB5
 1365 001c 10000000 		.4byte	.LFE5-.LFB5
 1366 0020 00000000 		.4byte	.LFB6
 1367 0024 0C000000 		.4byte	.LFE6-.LFB6
 1368 0028 00000000 		.4byte	.LFB7
 1369 002c 14000000 		.4byte	.LFE7-.LFB7
 1370 0030 00000000 		.4byte	.LFB9
 1371 0034 0C000000 		.4byte	.LFE9-.LFB9
 1372 0038 00000000 		.4byte	.LFB10
 1373 003c 0C000000 		.4byte	.LFE10-.LFB10
 1374 0040 00000000 		.4byte	.LFB11
 1375 0044 0C000000 		.4byte	.LFE11-.LFB11
 1376 0048 00000000 		.4byte	.LFB12
 1377 004c 0C000000 		.4byte	.LFE12-.LFB12
 1378 0050 00000000 		.4byte	.LFB13
 1379 0054 0C000000 		.4byte	.LFE13-.LFB13
 1380 0058 00000000 		.4byte	.LFB14
 1381 005c 0C000000 		.4byte	.LFE14-.LFB14
 1382 0060 00000000 		.4byte	.LFB15
 1383 0064 0C000000 		.4byte	.LFE15-.LFB15
 1384 0068 00000000 		.4byte	.LFB16
 1385 006c 0C000000 		.4byte	.LFE16-.LFB16
 1386 0070 00000000 		.4byte	.LFB8
 1387 0074 12000000 		.4byte	.LFE8-.LFB8
 1388 0078 00000000 		.4byte	.LFB3
 1389 007c 78000000 		.4byte	.LFE3-.LFB3
 1390 0080 00000000 		.4byte	.LFB2
 1391 0084 20000000 		.4byte	.LFE2-.LFB2
 1392 0088 00000000 		.4byte	.LFB17
 1393 008c 0C000000 		.4byte	.LFE17-.LFB17
 1394 0090 00000000 		.4byte	.LFB18
 1395 0094 0C000000 		.4byte	.LFE18-.LFB18
 1396 0098 00000000 		.4byte	.LFB19
 1397 009c 0C000000 		.4byte	.LFE19-.LFB19
 1398 00a0 00000000 		.4byte	0
 1399 00a4 00000000 		.4byte	0
 1400              		.section	.debug_ranges,"",%progbits
 1401              	.Ldebug_ranges0:
 1402 0000 00000000 		.4byte	.LFB4
 1403 0004 14000000 		.4byte	.LFE4
 1404 0008 00000000 		.4byte	.LFB5
 1405 000c 10000000 		.4byte	.LFE5
 1406 0010 00000000 		.4byte	.LFB6
 1407 0014 0C000000 		.4byte	.LFE6
 1408 0018 00000000 		.4byte	.LFB7
 1409 001c 14000000 		.4byte	.LFE7
 1410 0020 00000000 		.4byte	.LFB9
 1411 0024 0C000000 		.4byte	.LFE9
 1412 0028 00000000 		.4byte	.LFB10
 1413 002c 0C000000 		.4byte	.LFE10
 1414 0030 00000000 		.4byte	.LFB11
 1415 0034 0C000000 		.4byte	.LFE11
 1416 0038 00000000 		.4byte	.LFB12
 1417 003c 0C000000 		.4byte	.LFE12
 1418 0040 00000000 		.4byte	.LFB13
 1419 0044 0C000000 		.4byte	.LFE13
 1420 0048 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 42


 1421 004c 0C000000 		.4byte	.LFE14
 1422 0050 00000000 		.4byte	.LFB15
 1423 0054 0C000000 		.4byte	.LFE15
 1424 0058 00000000 		.4byte	.LFB16
 1425 005c 0C000000 		.4byte	.LFE16
 1426 0060 00000000 		.4byte	.LFB8
 1427 0064 12000000 		.4byte	.LFE8
 1428 0068 00000000 		.4byte	.LFB3
 1429 006c 78000000 		.4byte	.LFE3
 1430 0070 00000000 		.4byte	.LFB2
 1431 0074 20000000 		.4byte	.LFE2
 1432 0078 00000000 		.4byte	.LFB17
 1433 007c 0C000000 		.4byte	.LFE17
 1434 0080 00000000 		.4byte	.LFB18
 1435 0084 0C000000 		.4byte	.LFE18
 1436 0088 00000000 		.4byte	.LFB19
 1437 008c 0C000000 		.4byte	.LFE19
 1438 0090 00000000 		.4byte	0
 1439 0094 00000000 		.4byte	0
 1440              		.section	.debug_line,"",%progbits
 1441              	.Ldebug_line0:
 1442 0000 B4010000 		.section	.debug_str,"MS",%progbits,1
 1442      02004F00 
 1442      00000201 
 1442      FB0E0D00 
 1442      01010101 
 1443              	.LASF15:
 1444 0000 72656731 		.ascii	"reg16\000"
 1444      3600
 1445              	.LASF33:
 1446 0006 426C696E 		.ascii	"Blinker_ReadCapture\000"
 1446      6B65725F 
 1446      52656164 
 1446      43617074 
 1446      75726500 
 1447              	.LASF24:
 1448 001a 426C696E 		.ascii	"Blinker_WriteCompare1\000"
 1448      6B65725F 
 1448      57726974 
 1448      65436F6D 
 1448      70617265 
 1449              	.LASF42:
 1450 0030 426C696E 		.ascii	"Blinker_ReadPeriod\000"
 1450      6B65725F 
 1450      52656164 
 1450      50657269 
 1450      6F6400
 1451              	.LASF36:
 1452 0043 72657375 		.ascii	"result\000"
 1452      6C7400
 1453              	.LASF23:
 1454 004a 70657269 		.ascii	"period\000"
 1454      6F6400
 1455              	.LASF27:
 1456 0051 426C696E 		.ascii	"Blinker_SetInterruptMode\000"
 1456      6B65725F 
 1456      53657449 
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 43


 1456      6E746572 
 1456      72757074 
 1457              	.LASF3:
 1458 006a 73686F72 		.ascii	"short unsigned int\000"
 1458      7420756E 
 1458      7369676E 
 1458      65642069 
 1458      6E7400
 1459              	.LASF26:
 1460 007d 426C696E 		.ascii	"Blinker_WriteCompare2\000"
 1460      6B65725F 
 1460      57726974 
 1460      65436F6D 
 1460      70617265 
 1461              	.LASF30:
 1462 0093 426C696E 		.ascii	"Blinker_ReadStatusRegister\000"
 1462      6B65725F 
 1462      52656164 
 1462      53746174 
 1462      75735265 
 1463              	.LASF11:
 1464 00ae 666C6F61 		.ascii	"float\000"
 1464      7400
 1465              	.LASF22:
 1466 00b4 636F756E 		.ascii	"counter\000"
 1466      74657200 
 1467              	.LASF18:
 1468 00bc 426C696E 		.ascii	"Blinker_Enable\000"
 1468      6B65725F 
 1468      456E6162 
 1468      6C6500
 1469              	.LASF1:
 1470 00cb 756E7369 		.ascii	"unsigned char\000"
 1470      676E6564 
 1470      20636861 
 1470      7200
 1471              	.LASF14:
 1472 00d9 72656738 		.ascii	"reg8\000"
 1472      00
 1473              	.LASF19:
 1474 00de 426C696E 		.ascii	"Blinker_Stop\000"
 1474      6B65725F 
 1474      53746F70 
 1474      00
 1475              	.LASF5:
 1476 00eb 6C6F6E67 		.ascii	"long unsigned int\000"
 1476      20756E73 
 1476      69676E65 
 1476      6420696E 
 1476      7400
 1477              	.LASF48:
 1478 00fd 426C696E 		.ascii	"Blinker_ReadControlRegister\000"
 1478      6B65725F 
 1478      52656164 
 1478      436F6E74 
 1478      726F6C52 
 1479              	.LASF9:
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 44


 1480 0119 75696E74 		.ascii	"uint8\000"
 1480      3800
 1481              	.LASF32:
 1482 011f 636F6E74 		.ascii	"control\000"
 1482      726F6C00 
 1483              	.LASF35:
 1484 0127 426C696E 		.ascii	"Blinker_Init\000"
 1484      6B65725F 
 1484      496E6974 
 1484      00
 1485              	.LASF20:
 1486 0134 426C696E 		.ascii	"Blinker_WriteCounter\000"
 1486      6B65725F 
 1486      57726974 
 1486      65436F75 
 1486      6E746572 
 1487              	.LASF12:
 1488 0149 646F7562 		.ascii	"double\000"
 1488      6C6500
 1489              	.LASF21:
 1490 0150 426C696E 		.ascii	"Blinker_WritePeriod\000"
 1490      6B65725F 
 1490      57726974 
 1490      65506572 
 1490      696F6400 
 1491              	.LASF10:
 1492 0164 75696E74 		.ascii	"uint16\000"
 1492      313600
 1493              	.LASF40:
 1494 016b 426C696E 		.ascii	"Blinker_ReadCompare1\000"
 1494      6B65725F 
 1494      52656164 
 1494      436F6D70 
 1494      61726531 
 1495              	.LASF41:
 1496 0180 426C696E 		.ascii	"Blinker_ReadCompare2\000"
 1496      6B65725F 
 1496      52656164 
 1496      436F6D70 
 1496      61726532 
 1497              	.LASF39:
 1498 0195 426C696E 		.ascii	"Blinker_Start\000"
 1498      6B65725F 
 1498      53746172 
 1498      7400
 1499              	.LASF43:
 1500 01a3 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1500      74657243 
 1500      72697469 
 1500      63616C53 
 1500      65637469 
 1501              	.LASF8:
 1502 01ba 756E7369 		.ascii	"unsigned int\000"
 1502      676E6564 
 1502      20696E74 
 1502      00
 1503              	.LASF29:
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 45


 1504 01c7 426C696E 		.ascii	"Blinker_ReadCounter\000"
 1504      6B65725F 
 1504      52656164 
 1504      436F756E 
 1504      74657200 
 1505              	.LASF44:
 1506 01db 43794578 		.ascii	"CyExitCriticalSection\000"
 1506      69744372 
 1506      69746963 
 1506      616C5365 
 1506      6374696F 
 1507              	.LASF31:
 1508 01f1 426C696E 		.ascii	"Blinker_WriteControlRegister\000"
 1508      6B65725F 
 1508      57726974 
 1508      65436F6E 
 1508      74726F6C 
 1509              	.LASF45:
 1510 020e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1510      43313120 
 1510      352E342E 
 1510      31203230 
 1510      31363036 
 1511 0241 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1511      20726576 
 1511      6973696F 
 1511      6E203233 
 1511      37373135 
 1512 0274 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1512      66756E63 
 1512      74696F6E 
 1512      2D736563 
 1512      74696F6E 
 1513              	.LASF37:
 1514 029c 6374726C 		.ascii	"ctrl\000"
 1514      00
 1515              	.LASF47:
 1516 02a1 453A5C47 		.ascii	"E:\\GitHub\\SmartBox\\firmware\\SmartBox\\SmartBox."
 1516      69744875 
 1516      625C536D 
 1516      61727442 
 1516      6F785C66 
 1517 02cf 63796473 		.ascii	"cydsn\000"
 1517      6E00
 1518              	.LASF17:
 1519 02d5 73697A65 		.ascii	"sizetype\000"
 1519      74797065 
 1519      00
 1520              	.LASF6:
 1521 02de 6C6F6E67 		.ascii	"long long int\000"
 1521      206C6F6E 
 1521      6720696E 
 1521      7400
 1522              	.LASF34:
 1523 02ec 426C696E 		.ascii	"Blinker_ClearFIFO\000"
 1523      6B65725F 
 1523      436C6561 
ARM GAS  C:\Users\alexis\AppData\Local\Temp\ccFkPU4e.s 			page 46


 1523      72464946 
 1523      4F00
 1524              	.LASF28:
 1525 02fe 696E7465 		.ascii	"interruptMode\000"
 1525      72727570 
 1525      744D6F64 
 1525      6500
 1526              	.LASF2:
 1527 030c 73686F72 		.ascii	"short int\000"
 1527      7420696E 
 1527      7400
 1528              	.LASF46:
 1529 0316 47656E65 		.ascii	"Generated_Source\\PSoC4\\Blinker.c\000"
 1529      72617465 
 1529      645F536F 
 1529      75726365 
 1529      5C50536F 
 1530              	.LASF38:
 1531 0337 426C696E 		.ascii	"Blinker_interruptState\000"
 1531      6B65725F 
 1531      696E7465 
 1531      72727570 
 1531      74537461 
 1532              	.LASF4:
 1533 034e 6C6F6E67 		.ascii	"long int\000"
 1533      20696E74 
 1533      00
 1534              	.LASF13:
 1535 0357 63686172 		.ascii	"char\000"
 1535      00
 1536              	.LASF16:
 1537 035c 6C6F6E67 		.ascii	"long double\000"
 1537      20646F75 
 1537      626C6500 
 1538              	.LASF0:
 1539 0368 7369676E 		.ascii	"signed char\000"
 1539      65642063 
 1539      68617200 
 1540              	.LASF25:
 1541 0374 636F6D70 		.ascii	"compare\000"
 1541      61726500 
 1542              	.LASF49:
 1543 037c 426C696E 		.ascii	"Blinker_initVar\000"
 1543      6B65725F 
 1543      696E6974 
 1543      56617200 
 1544              	.LASF7:
 1545 038c 6C6F6E67 		.ascii	"long long unsigned int\000"
 1545      206C6F6E 
 1545      6720756E 
 1545      7369676E 
 1545      65642069 
 1546              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
